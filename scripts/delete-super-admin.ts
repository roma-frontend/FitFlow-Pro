// scripts/delete-super-admin.ts
import { ConvexHttpClient } from "convex/browser";
import * as readline from 'readline';

// Define the SuperAdmin type
interface SuperAdmin {
  _id: string;
  name: string;
  email: string;
  isActive: boolean;
  role: string;
}

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function askQuestion(question: string): Promise<string> {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer);
    });
  });
}

async function deleteSuperAdmin() {
  try {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤
    const superAdmins: SuperAdmin[] = await convex.query("admin:getAllSuperAdmins");
    
    if (!superAdmins || superAdmins.length === 0) {
      console.log('‚ùå –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      rl.close();
      return;
    }

    console.log('\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω—ã:');
    superAdmins.forEach((admin: SuperAdmin, index: number) => {
      console.log(`${index + 1}. ${admin.name} (${admin.email}) - ${admin.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);
    });

    if (superAdmins.length === 1) {
      console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω! –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      rl.close();
      return;
    }

    console.log('\nüö® –í–ù–ò–ú–ê–ù–ò–ï: –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!');
    console.log('–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ –∏ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã.');
    
    const action = await askQuestion('\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –ú—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è)\n2. –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ\n3. –ü–æ–Ω–∏–∂–µ–Ω–∏–µ –¥–æ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞\n4. –û—Ç–º–µ–Ω–∞\n\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ');

    if (action === '4') {
      console.log('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
      rl.close();
      return;
    }

    const email = await askQuestion('\n–í–≤–µ–¥–∏—Ç–µ email —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ');
    
    const targetAdmin = superAdmins.find((admin: SuperAdmin) => admin.email === email);
    if (!targetAdmin) {
      console.log('‚ùå –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω');
      rl.close();
      return;
    }

    console.log(`\nüìß –ù–∞–π–¥–µ–Ω —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω: ${targetAdmin.name} (${targetAdmin.email})`);
    
    const confirm = await askQuestion(`\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ ${action === '1' ? '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : action === '2' ? '—Ñ–∏–∑–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å' : '–ø–æ–Ω–∏–∑–∏—Ç—å'} —ç—Ç–æ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞? (–¥–∞/–Ω–µ—Ç): `);
    
    if (confirm.toLowerCase() !== '–¥–∞') {
      console.log('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
      rl.close();
      return;
    }

    let result;
    
    switch (action) {
      case '1':
        // –ú—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è)
        result = await convex.mutation("admin:deactivateSuperAdmin", {
          userId: targetAdmin._id
        });
        console.log('‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        break;
        
      case '2':
        // –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        const finalConfirm = await askQuestion('\nüö® –ü–û–°–õ–ï–î–ù–ï–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!\n–í–≤–µ–¥–∏—Ç–µ "–£–î–ê–õ–ò–¢–¨" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ');
        
        if (finalConfirm !== '–£–î–ê–õ–ò–¢–¨') {
          console.log('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
          rl.close();
          return;
        }
        
        result = await convex.mutation("admin:deleteSuperAdminByEmail", {
          email: targetAdmin.email,
          confirmationCode: "DELETE_SUPER_ADMIN_CONFIRMED"
        });
        console.log('‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Ñ–∏–∑–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω');
        break;
        
      case '3':
        // –ü–æ–Ω–∏–∂–µ–Ω–∏–µ –¥–æ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
        result = await convex.mutation("admin:demoteSuperAdmin", {
          userId: targetAdmin._id,
          confirmationCode: "DEMOTE_SUPER_ADMIN_CONFIRMED"
        });
        console.log('‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø–æ–Ω–∏–∂–µ–Ω –¥–æ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        break;
        
      default:
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä');
        rl.close();
        return;
    }

    console.log('üéâ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:', error);
  } finally {
    rl.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
console.log('üîß –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
console.log('=====================================');
deleteSuperAdmin();