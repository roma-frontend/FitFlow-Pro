// app/register/page.tsx - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å Suspense
"use client";

import { Suspense } from "react";
import { useState } from "react";
import { useAuthForm } from "@/hooks/useAuthForm";
import { AuthCard } from "@/components/auth/AuthCard";
import { ErrorAlert } from "@/components/auth/ErrorAlert";
import { FormField } from "@/components/auth/FormField";
import { UniversalSubmitButton } from "@/components/auth/UniversalSubmitButton";
import { AuthModeToggle } from "@/components/auth/AuthModeToggle";
import { FormStatusIndicator } from "@/components/auth/FormStatusIndicator";
import { SecurityInfo } from "@/components/auth/SecurityInfo";
import { DevelopmentTools } from "@/components/auth/DevelopmentTools";
import { OtherAuthOptions } from "@/components/auth/OtherAuthOptions";
import { ForgotPasswordForm } from "@/components/auth/ForgotPasswordForm";
import { FaceIdSetup } from "@/components/face-id/FaceIdSetup";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  Shield,
  Zap,
  Users,
  Sparkles,
  CheckCircle,
  ArrowRight,
  Star,
  TrendingUp,
  Loader2,
  Eye,
  Lock,
  Mail,
  User,
  Phone,
} from "lucide-react";
import { toast } from "@/hooks/use-toast";
import { RegistrationSuccess } from "@/components/auth/RegistrationSuccess";
import { useRouter } from "next/navigation";
import { FaceIdQuickLogin } from "@/components/auth/FaceIdQuickLogin";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è Suspense
function PageLoader() {
  return (
    <div className="min-h-[100lvh] bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 lg:bg-gradient-to-br lg:from-blue-50 lg:via-white lg:to-indigo-50 flex items-center justify-center p-4">
      <div className="text-center text-white lg:text-gray-900">
        <div className="relative mb-6">
          <div className="w-16 h-16 mx-auto bg-white/20 lg:bg-blue-100 rounded-2xl flex items-center justify-center backdrop-blur-sm shadow-lg">
            <Loader2 className="h-8 w-8 animate-spin text-white lg:text-blue-600" />
          </div>
        </div>
        <h2 className="text-xl font-semibold mb-2">–ó–∞–≥—Ä—É–∑–∫–∞...</h2>
        <p className="text-blue-100 lg:text-gray-600 text-sm">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É</p>
      </div>
    </div>
  );
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function MemberLoginContent() {
  const [showForgotPassword, setShowForgotPassword] = useState(false);
  const [faceIdSetupComplete, setFaceIdSetupComplete] = useState(false);
  const [faceIdData, setFaceIdData] = useState<any>(null);
  const router = useRouter();

  const {
    isLogin,
    loading,
    error,
    emailValid,
    formData,
    validationStates,
    isValidating,
    isFormReady,
    isRedirecting,
    handleFieldChange,
    handleSubmit,
    toggleMode,
    fillFormData,
    clearForm,
    registrationSuccess,
    registrationEmail,
    resetRegistrationSuccess,
  } = useAuthForm();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  if (isRedirecting) {
    return (
      <div className="min-h-[100lvh] bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 lg:bg-gradient-to-br lg:from-blue-50 lg:via-white lg:to-indigo-50 flex items-center justify-center p-4">
        <div className="text-center text-white lg:text-gray-900">
          <div className="relative mb-6">
            <div className="w-16 h-16 mx-auto bg-white/20 lg:bg-blue-100 rounded-2xl flex items-center justify-center backdrop-blur-sm shadow-lg">
              <Loader2 className="h-8 w-8 animate-spin text-white lg:text-blue-600" />
            </div>
          </div>
          <h2 className="text-xl font-semibold mb-2">
            {isLogin ? "–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"}
          </h2>
          <p className="text-blue-100 lg:text-gray-600 text-sm">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...</p>
        </div>
      </div>
    );
  }

  if (registrationSuccess && !isLogin) {
    return (
      <RegistrationSuccess
        email={registrationEmail}
        onBackToLogin={() => {
          resetRegistrationSuccess();
          toggleMode(); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä–µ–∂–∏–º –≤—Ö–æ–¥–∞
        }}
        onResendEmail={async () => {
          try {
            // –õ–æ–≥–∏–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
            const response = await fetch('/api/auth/resend-verification', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email: registrationEmail }),
            });

            if (response.ok) {
              toast({
                title: "–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! üìß",
                description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –µ—â–µ —Ä–∞–∑",
              });
            } else {
              throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
            }
          } catch (error) {
            toast({
              variant: "destructive",
              title: "–û—à–∏–±–∫–∞",
              description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ",
            });
          }
        }}
      />
    );
  }

  // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è Face ID setup
  const handleFaceIdComplete = (success: boolean, data?: any) => {
    console.log('üéâ Face ID setup –∑–∞–≤–µ—Ä—à–µ–Ω:', { success, data });
    
    if (success) {
      setFaceIdSetupComplete(true);
      setFaceIdData(data);
      console.log('‚úÖ Face ID –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', data);
    } else {
      console.log('‚ùå Face ID setup –Ω–µ —É–¥–∞–ª—Å—è');
    }
  };

  if (showForgotPassword) {
    return (
      <div className="min-h-[100lvh] bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 flex items-center justify-center p-4">
        <div className="w-full max-w-sm">
          <ForgotPasswordForm
            onBack={() => setShowForgotPassword(false)}
            initialEmail={formData.email}
          />
        </div>
      </div>
    );
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  const MobileHeader = () => (
    <div className="text-center mb-8">
      <div className="relative mb-6">
        <div
          className="w-20 h-20 mx-auto bg-gradient-to-r from-blue-500 via-blue-600 to-purple-600 rounded-3xl flex items-center justify-center shadow-2xl cursor-pointer transform transition-all duration-300 ease-out relative overflow-hidden group"
          onClick={() => router.push('/')}
        >
          <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-3xl" />
          <div className="absolute inset-0 bg-gradient-to-tr from-white/20 via-transparent to-transparent rounded-3xl" />
          <Shield className="w-10 h-10 text-white z-10 relative drop-shadow-lg" />
          <Sparkles className="absolute -top-1 -right-1 w-4 h-4 text-yellow-300 animate-ping z-20" />
        </div>
      </div>
      
      <h1 className="text-2xl font-bold text-white mb-2">
        {isLogin ? "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!" : "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!"}
      </h1>
      
      <p className="text-blue-100 text-sm">
        {isLogin ? "–í–æ–π–¥–∏—Ç–µ –≤ FitFlow Pro" : "–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç FitFlow Pro"}
      </p>
      
      <div className="mt-4 flex justify-center space-x-4 text-xs text-white/60">
        <div className="flex items-center">
          <span className="w-2 h-2 bg-green-400 rounded-full mr-1" />
          <span>–ë–µ–∑–æ–ø–∞—Å–Ω–æ</span>
        </div>
        <div className="flex items-center">
          <span className="w-2 h-2 bg-blue-400 rounded-full mr-1" />
          <span>–ë—ã—Å—Ç—Ä–æ</span>
        </div>
        <div className="flex items-center">
          <span className="w-2 h-2 bg-purple-400 rounded-full mr-1" />
          <span>–ù–∞–¥–µ–∂–Ω–æ</span>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-[100lvh] bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 lg:bg-gradient-to-br lg:from-blue-50 lg:via-white lg:to-indigo-50">
      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è */}
      <div className="lg:hidden">
        <div className="min-h-[100lvh] flex flex-col">
          <div className="flex-1 flex flex-col justify-center px-6 py-8">

            {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <MobileHeader />

            {/* –§–æ—Ä–º–∞ –≤ card */}
            <div className="w-full max-w-sm mx-auto">
              <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl rounded-3xl overflow-hidden">
                <CardContent className="p-6">
                  <ErrorAlert error={error} />

                  <form onSubmit={handleSubmit} className="space-y-4">
                    {!isLogin && (
                      <div className="relative">
                        <User className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                        <input
                          type="text"
                          placeholder="–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                          value={formData.name}
                          onChange={(e) => handleFieldChange("name", e.target.value)}
                          className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                          required
                        />
                        {validationStates.name && validationStates.name.isValid && (
                          <CheckCircle className="absolute right-3 top-3 h-5 w-5 text-green-500" />
                        )}
                      </div>
                    )}

                    <div className="relative">
                      <Mail className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                      <input
                        type="email"
                        placeholder="Email –∞–¥—Ä–µ—Å"
                        value={formData.email}
                        onChange={(e) => handleFieldChange("email", e.target.value)}
                        className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                        required
                      />
                      {validationStates.email && validationStates.email.isValid && (
                        <CheckCircle className="absolute right-3 top-3 h-5 w-5 text-green-500" />
                      )}
                      {isValidating && (
                        <Loader2 className="absolute right-3 top-3 h-5 w-5 text-blue-500 animate-spin" />
                      )}
                    </div>

                    <div className="relative">
                      <Lock className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                      <input
                        type="password"
                        placeholder={isLogin ? "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" : "–°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å"}
                        value={formData.password}
                        onChange={(e) => handleFieldChange("password", e.target.value)}
                        className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                        required
                      />
                      {validationStates.password && validationStates.password.isValid && (
                        <CheckCircle className="absolute right-3 top-3 h-5 w-5 text-green-500" />
                      )}
                    </div>

                    {!isLogin && (
                      <div className="relative">
                        <Phone className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                        <input
                          type="tel"
                          placeholder="+7 (999) 123-45-67"
                          value={formData.phone}
                          onChange={(e) => handleFieldChange("phone", e.target.value)}
                          className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                        />
                        {validationStates.phone && validationStates.phone.isValid && (
                          <CheckCircle className="absolute right-3 top-3 h-5 w-5 text-green-500" />
                        )}
                      </div>
                    )}

                    <button
                      type="submit"
                      disabled={loading || !isFormReady || isValidating}
                      className="w-full py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-medium rounded-2xl hover:from-blue-700 hover:to-purple-700 focus:ring-4 focus:ring-blue-300 transition-all disabled:opacity-50 disabled:cursor-not-allowed shadow-lg"
                    >
                      {loading ? (
                        <div className="flex items-center justify-center">
                          <Loader2 className="h-5 w-5 animate-spin mr-2" />
                          {isLogin ? "–í—Ö–æ–¥–∏–º..." : "–°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç..."}
                        </div>
                      ) : (
                        isLogin ? "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É" : "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
                      )}
                    </button>
                  </form>

                  {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ */}
                  <div className="mt-6 text-center">
                    <button
                      onClick={toggleMode}
                      disabled={loading || isValidating}
                      className="text-sm text-gray-600 hover:text-gray-900 transition-colors"
                    >
                      {isLogin ? (
                        <>
                          –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <span className="text-blue-600 font-medium">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>
                        </>
                      ) : (
                        <>
                          –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <span className="text-blue-600 font-medium">–í–æ–π—Ç–∏</span>
                        </>
                      )}
                    </button>
                  </div>

                  {/* –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å */}
                  {isLogin && (
                    <div className="mt-3 text-center">
                      <button
                        onClick={() => setShowForgotPassword(true)}
                        className="text-sm text-gray-500 hover:text-gray-700 transition-colors"
                      >
                        –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                      </button>
                    </div>
                  )}

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
                  {!isLogin && (
                    <div className="mt-6 space-y-3">
                      <h4 className="text-xs font-medium text-gray-500 uppercase tracking-wide">–í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h4>
                      <div className="space-y-2 text-xs">
                        <div className="flex items-center p-2 bg-purple-50 rounded-lg">
                          <CheckCircle className="w-3 h-3 text-purple-500 mr-2 flex-shrink-0" />
                          <span className="text-purple-700">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</span>
                        </div>
                        <div className="flex items-center p-2 bg-green-50 rounded-lg">
                          <CheckCircle className="w-3 h-3 text-green-500 mr-2 flex-shrink-0" />
                          <span className="text-green-700">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã</span>
                        </div>
                        <div className="flex items-center p-2 bg-blue-50 rounded-lg">
                          <CheckCircle className="w-3 h-3 text-blue-500 mr-2 flex-shrink-0" />
                          <span className="text-blue-700">Face ID –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</span>
                        </div>
                        <div className="flex items-center p-2 bg-orange-50 rounded-lg">
                          <CheckCircle className="w-3 h-3 text-orange-500 mr-2 flex-shrink-0" />
                          <span className="text-orange-700">–ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                        </div>
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>

              {/* Face ID Setup –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
              {!isLogin && (
                <div className="hidden lg:block mt-6">
                  <Card className="bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl overflow-hidden">
                    <CardContent className="p-4">
                      <div className="flex items-center justify-between mb-3">
                        <div className="flex items-center">
                          <Eye className="h-5 w-5 text-white mr-2" />
                          <span className="text-white font-medium">Face ID</span>
                        </div>
                        <div className="text-xs text-white/70">
                          {faceIdSetupComplete ? "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" : "‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è"}
                        </div>
                      </div>
                      <p className="text-xs text-white/80 mb-3">
                        {faceIdSetupComplete 
                          ? "Face ID –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!" 
                          : "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –ø–æ –ª–∏—Ü—É"
                        }
                      </p>
                      {!faceIdSetupComplete && (
                        <FaceIdSetup onComplete={handleFaceIdComplete} />
                      )}
                    </CardContent>
                  </Card>
                </div>
              )}

              {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <div className="mt-6 space-y-3">
                <button
                  onClick={() => router.push("/setup-face-recognition")}
                  className="w-full flex items-center justify-center p-3 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl hover:bg-white/30 transition-all text-white"
                >
                  <Eye className="h-5 w-5 mr-2" />
                  <span className="font-medium">Face ID –≤—Ö–æ–¥</span>
                </button>

                <button
                  onClick={() => router.push("/staff-login")}
                  className="w-full flex items-center justify-center p-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl hover:bg-white/20 transition-all text-white/80"
                >
                  <Shield className="h-5 w-5 mr-2" />
                  <span className="font-medium">–í—Ö–æ–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</span>
                </button>
              </div>

              {/* –°–∏—Å—Ç–µ–º–Ω—ã–π —Å—Ç–∞—Ç—É—Å */}
              <div className="mt-6 p-4 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
                <div className="flex items-center justify-between mb-3">
                  <h4 className="text-sm font-medium text-white">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h4>
                  <div className="flex items-center">
                    <div className="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse" />
                    <span className="text-xs text-green-300">–û–Ω–ª–∞–π–Ω</span>
                  </div>
                </div>
                <div className="space-y-1 text-xs text-white/70">
                  <div className="flex justify-between">
                    <span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
                    <span className="text-green-300">‚úì –î–æ—Å—Ç—É–ø–Ω–∞</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Face ID</span>
                    <span className="text-green-300">‚úì –†–∞–±–æ—Ç–∞–µ—Ç</span>
                  </div>
                  <div className="flex justify-between">
                    <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                    <span className="text-green-300">‚úì –ê–∫—Ç–∏–≤–Ω—ã</span>
                  </div>
                </div>
              </div>

            </div>
          </div>
        </div>
      </div>

      {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è) */}
      <div className="hidden lg:block py-8 px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              {isLogin
                ? "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FitFlow Pro"
                : "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ FitFlow Pro"}
            </h1>
            <p className="text-lg text-gray-600">
              {isLogin
                ? "–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç"
                : "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤"}
            </p>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –≤–∏–¥–µ "–∫–Ω–∏–≥–∏" */}
          <div className="grid lg:grid-cols-2 gap-8 items-start">
            {/* –õ–µ–≤–∞—è "—Å—Ç—Ä–∞–Ω–∏—Ü–∞" - –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
            <div className="order-1">
              <AuthCard isLogin={isLogin}>
                <ErrorAlert error={error} />

                <form onSubmit={handleSubmit} className="space-y-5">
                  {!isLogin && (
                    <FormField
                      fieldName="name"
                      label="–ü–æ–ª–Ω–æ–µ –∏–º—è"
                      placeholder="–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                      type="text"
                      required
                      value={formData.name}
                      onChange={(value) => handleFieldChange("name", value)}
                      validationState={validationStates.name}
                      isLogin={isLogin}
                    />
                  )}

                  <FormField
                    fieldName="email"
                    label="Email –∞–¥—Ä–µ—Å"
                    placeholder="your@email.com"
                    type="email"
                    required
                    value={formData.email}
                    onChange={(value) => handleFieldChange("email", value)}
                    validationState={validationStates.email}
                    isValidating={isValidating}
                    isLogin={isLogin}
                  />

                  <FormField
                    fieldName="password"
                    label="–ü–∞—Ä–æ–ª—å"
                    placeholder={
                      isLogin ? "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" : "–°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å"
                    }
                    type="password"
                    required
                    value={formData.password}
                    onChange={(value) => handleFieldChange("password", value)}
                    validationState={validationStates.password}
                    isLogin={isLogin}
                  />

                  {!isLogin && (
                    <FormField
                      fieldName="phone"
                      label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                      placeholder="+7 (999) 123-45-67"
                      type="tel"
                      required={false}
                      value={formData.phone}
                      onChange={(value) => handleFieldChange("phone", value)}
                      validationState={validationStates.phone}
                      isLogin={isLogin}
                    />
                  )}

                  <UniversalSubmitButton
                    isLogin={isLogin}
                    loading={loading}
                    isFormReady={isFormReady}
                    isValidating={isValidating}
                  />
                </form>

                <AuthModeToggle
                  isLogin={isLogin}
                  onToggle={toggleMode}
                  loading={loading}
                  isValidating={isValidating}
                  onShowForgotPassword={() => setShowForgotPassword(true)}
                />

                <OtherAuthOptions loading={loading} />
              </AuthCard>

              {/* –°—Ç–∞—Ç—É—Å —Ñ–æ—Ä–º—ã –ø–æ–¥ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π */}
              <div className="mt-6">
                <FormStatusIndicator
                  isFormReady={isFormReady}
                  isValidating={isValidating}
                  formData={formData}
                  emailValid={emailValid}
                  isLogin={isLogin}
                  validationStates={validationStates}
                />
              </div>
            </div>

            {/* –ü—Ä–∞–≤–∞—è "—Å—Ç—Ä–∞–Ω–∏—Ü–∞" - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
            <div className="order-1 lg:order-2 space-y-6">
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
              <SecurityInfo isLogin={isLogin} />

              {/* ‚úÖ Face ID Setup - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º */}
              {!isLogin && (
                <div className="relative">
                  <FaceIdSetup onComplete={handleFaceIdComplete} />
                  
                  {/* ‚úÖ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ Face ID */}
                  <div className="absolute -top-2 -right-2">
                    {faceIdSetupComplete ? (
                      <div className="bg-gradient-to-r from-green-500 to-emerald-500 text-white text-xs px-2 py-1 rounded-full shadow-lg">
                        ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω
                      </div>
                    ) : (
                      <div className="bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs px-2 py-1 rounded-full shadow-lg">
                        ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                      </div>
                    )}
                  </div>

                  {/* ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å–ª–∏ Face ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω */}
                  {faceIdSetupComplete && faceIdData && (
                    <div className="mt-4 p-3 bg-green-50 border border-green-200 rounded-lg">
                      <div className="flex items-center text-green-700">
                        <CheckCircle className="h-4 w-4 mr-2" />
                        <span className="text-sm font-medium">Face ID –≥–æ—Ç–æ–≤!</span>
                      </div>
                      <p className="text-xs text-green-600 mt-1">
                        –ü—Ä–æ—Ñ–∏–ª—å: {faceIdData.profileId}
                      </p>
                    </div>
                  )}
                </div>
              )}

              {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
              <Card className="bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-purple-900 flex items-center">
                    <Sparkles className="h-5 w-5 mr-2" />
                    {isLogin ? "–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏" : "–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç"}
                  </CardTitle>
                </CardHeader>
                <CardContent className="text-sm text-purple-800 space-y-3">
                  <div className="space-y-3">
                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-purple-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">
                          –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
                        </span>
                        <p className="text-xs text-purple-700 mt-1">
                          –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏
                        </p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-purple-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω</span>
                        <p className="text-xs text-purple-700 mt-1">
                          –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã
                        </p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-purple-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">
                          –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                        </span>
                        <p className="text-xs text-purple-700 mt-1">
                          –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                        </p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-purple-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">
                          –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã
                        </span>
                        <p className="text-xs text-purple-700 mt-1">
                          –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
                        </p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <CheckCircle className={`h-4 w-4 mr-3 mt-0.5 flex-shrink-0 ${
                        faceIdSetupComplete ? 'text-green-500' : 'text-purple-500'
                      }`} />
                      <div>
                        <span className="font-medium">Face ID –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</span>
                        <p className="text-xs text-purple-700 mt-1">
                          {faceIdSetupComplete ? 
                            '–ù–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!' : 
                            '–ë—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥'
                          }
                        </p>
                      </div>
                    </div>
                  </div>
                  <div className="mt-4 p-3 bg-white/60 rounded-lg border border-purple-200">
                    <p className="text-center font-medium text-purple-900">
                      üéâ{" "}
                      {isLogin
                        ? "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!"
                        : "–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤—å—é!"}
                    </p>
                  </div>
                </CardContent>
              </Card>

              {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
              <Card className="bg-gradient-to-br from-green-50 to-emerald-50 border-green-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-green-900 flex items-center">
                    <TrendingUp className="h-5 w-5 mr-2" />
                    –ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
                  </CardTitle>
                </CardHeader>
                <CardContent className="text-sm text-green-800 space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center">
                      <div className="text-2xl font-bold text-green-600">
                        5,000+
                      </div>
                      <div className="text-xs text-green-700">
                        –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                      </div>
                    </div>
                    <div className="text-center">
                      <div className="text-2xl font-bold text-green-600">50+</div>
                      <div className="text-xs text-green-700">
                        –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤
                      </div>
                    </div>
                    <div className="text-center">
                      <div className="text-2xl font-bold text-green-600">
                        1,000+
                      </div>
                      <div className="text-xs text-green-700">
                        –ü—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
                      </div>
                    </div>
                    <div className="text-center">
                      <div className="text-2xl font-bold text-green-600">98%</div>
                      <div className="text-xs text-green-700">
                        –î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
                      </div>
                    </div>
                  </div>

                  {/* –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
                  <div className="mt-4 space-y-3">
                    <div className="p-3 bg-white/60 rounded-lg border border-green-200">
                      <div className="flex items-center mb-2">
                        <div className="flex text-yellow-400">
                          {[...Array(5)].map((_, i) => (
                            <Star key={i} className="h-3 w-3 fill-current" />
                          ))}
                        </div>
                        <span className="text-xs text-green-700 ml-2">
                          –ê–Ω–Ω–∞ –ö.
                        </span>
                      </div>
                      <p className="text-xs text-green-800">
                        "–ü–æ—Ç—Ä—è—Å–∞—é—â–∞—è —Å–∏—Å—Ç–µ–º–∞! –°–±—Ä–æ—Å–∏–ª–∞ 15 –∫–≥ –∑–∞ 3 –º–µ—Å—è—Ü–∞"
                      </p>
                    </div>

                    <div className="p-3 bg-white/60 rounded-lg border border-green-200">
                      <div className="flex items-center mb-2">
                        <div className="flex text-yellow-400">
                          {[...Array(5)].map((_, i) => (
                            <Star key={i} className="h-3 w-3 fill-current" />
                          ))}
                        </div>
                        <span className="text-xs text-green-700 ml-2">
                          –ú–∏—Ö–∞–∏–ª –†.
                        </span>
                      </div>
                      <p className="text-xs text-green-800">
                        "–¢—Ä–µ–Ω–µ—Ä—ã —Å—É–ø–µ—Ä! –ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç"
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <Card className="bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-blue-900 flex items-center">
                    <Zap className="h-5 w-5 mr-2" />
                    –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <FaceIdQuickLogin />

                  <button
                    onClick={() => (router.push("/staff-login"))}
                    className="w-full flex items-center justify-between p-3 bg-gradient-to-r from-gray-100 to-gray-200 border border-gray-300 rounded-lg hover:from-gray-200 hover:to-gray-300 transition-all text-left group"
                  >
                    <div className="flex items-center">
                      <Users className="h-4 w-4 text-gray-600 mr-3" />
                      <div>
                        <div className="font-medium text-gray-900">
                          –í—Ö–æ–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
                        </div>
                        <div className="text-xs text-gray-700">
                          –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                        </div>
                      </div>
                    </div>
                    <ArrowRight className="h-4 w-4 text-gray-600 group-hover:translate-x-1 transition-transform" />
                  </button>

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ */}
                  <div className="pt-2 border-t border-blue-200">
                    <div className="grid grid-cols-2 gap-2">
                      <button
                        onClick={() => (router.push("/programs"))}
                        className="text-xs text-blue-600 hover:text-blue-800 p-2 rounded hover:bg-blue-100 transition-colors"
                      >
                        üìã –ü—Ä–æ–≥—Ä–∞–º–º—ã
                      </button>
                      <button
                        onClick={() => (router.push("/trainers"))}
                        className="text-xs text-blue-600 hover:text-blue-800 p-2 rounded hover:bg-blue-100 transition-colors"
                      >
                        üë®‚Äçüíº –¢—Ä–µ–Ω–µ—Ä—ã
                      </button>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è */}
              {!isLogin && (
                <Card className="bg-gradient-to-br from-orange-50 to-red-50 border-orange-200 shadow-lg">
                  <CardHeader>
                    <CardTitle className="text-lg text-orange-900 flex items-center">
                      üéÅ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="text-sm text-orange-800">
                    <div className="space-y-3">
                      <div className="p-3 bg-white/60 rounded-lg border border-orange-200">
                        <div className="font-medium text-orange-900 mb-1">
                          üî• –ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ!
                        </div>
                        <p className="text-xs text-orange-700">
                          –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ–≥–æ–¥–Ω—è –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º
                          —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 30 –¥–Ω–µ–π
                        </p>
                      </div>

                      <div className="text-center">
                        <div className="text-xs text-orange-600">
                          ‚è∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              )}

              {/* Development Tools (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ) */}
              <DevelopmentTools
                isLogin={isLogin}
                loading={loading}
                isValidating={isValidating}
                onFillData={fillFormData}
                onClearForm={clearForm}
                onShowForgotPassword={() => setShowForgotPassword(true)}
              />
            </div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É */}
          <div className="mt-12 text-center">
            <Card className="bg-gradient-to-r from-gray-50 to-gray-100 border-gray-200 shadow-sm">
              <CardContent className="py-6">
                <div className="flex flex-col sm:flex-row items-center justify-center gap-6 text-sm text-gray-600">
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2" />
                    <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
                  </div>
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-2" />
                    <span>–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</span>
                  </div>
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-purple-500 rounded-full mr-2" />
                    <span>24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞</span>
                  </div>
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-orange-500 rounded-full mr-2" />
                    <span>–û—Ç–º–µ–Ω–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è</span>
                  </div>
                </div>

                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
                <div className="mt-4 pt-4 border-t border-gray-200">
                  <div className="flex flex-wrap justify-center gap-4 text-xs text-gray-500">
                    <a
                      href="/privacy"
                      className="hover:text-gray-700 transition-colors"
                    >
                      –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                    </a>
                    <a
                      href="/terms"
                      className="hover:text-gray-700 transition-colors"
                    >
                      –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    </a>
                    <a
                      href="/support"
                      className="hover:text-gray-700 transition-colors"
                    >
                      –ü–æ–¥–¥–µ—Ä–∂–∫–∞
                    </a>
                    <a
                      href="/about"
                      className="hover:text-gray-700 transition-colors"
                    >
                      –û –Ω–∞—Å
                    </a>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}

export default function RegisterPage() {
  return (
    <Suspense fallback={<PageLoader />}>
      <MemberLoginContent />
    </Suspense>
  );
}