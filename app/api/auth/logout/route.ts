// app/api/auth/logout/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { logout } from '@/lib/simple-auth';

export async function POST(request: NextRequest) {
  try {
    console.log('üö™ [Logout] –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã—Ö–æ–¥–∞');
    
    // –ü–æ–ª—É—á–∞–µ–º session_id –∏–∑ cookies
    const sessionId = request.cookies.get('session_id')?.value;
    
    if (sessionId) {
      // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é
      const loggedOut = logout(sessionId);
      console.log(`üö™ [Logout] –°–µ—Å—Å–∏—è ${sessionId.substring(0, 20)}... ${loggedOut ? '—É–¥–∞–ª–µ–Ω–∞' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
    }

    // –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    const response = NextResponse.json({
      success: true,
      message: '–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ',
      timestamp: Date.now() // –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    }, {
      headers: {
        'Cache-Control': 'no-store, no-cache, must-revalidate, proxy-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0',
        'Surrogate-Control': 'no-store'
      }
    });

    // –û—á–∏—â–∞–µ–º –≤—Å–µ cookies —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const cookieOptions = {
      path: '/',
      expires: new Date(0),
      sameSite: 'lax' as const,
      secure: process.env.NODE_ENV === 'production'
    };

    response.cookies.set('session_id', '', cookieOptions);
    response.cookies.set('session_id_debug', '', cookieOptions);
    response.cookies.set('auth_token', '', cookieOptions);
    response.cookies.set('user_role', '', cookieOptions);

    console.log('‚úÖ [Logout] –í—Å–µ cookies –æ—á–∏—â–µ–Ω—ã');

    return response;

  } catch (error) {
    console.error('‚ùå [Logout] –û—à–∏–±–∫–∞:', error);
    return NextResponse.json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã'
    }, { status: 500 });
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º GET –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
export async function GET() {
  return NextResponse.json({ 
    error: 'Method not allowed' 
  }, { status: 405 });
}