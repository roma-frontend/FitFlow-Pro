// app/api/auth/face-login/route.ts - –¢–û–õ–¨–ö–û –†–ï–ê–õ–¨–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò
import { NextRequest, NextResponse } from 'next/server';
import jwt from 'jsonwebtoken';

export async function POST(request: NextRequest) {
  try {
    console.log('üë§ Face Login: –Ω–∞—á–∞–ª–æ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Face ID');

    const body = await request.json();
    const { descriptor, confidence } = body;

    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!descriptor || descriptor.length === 0) {
      return NextResponse.json({
        success: false,
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –ª–∏—Ü–∞ –¥–ª—è –≤—Ö–æ–¥–∞'
      }, { status: 400 });
    }

    if (confidence < 60) {
      return NextResponse.json({
        success: false,
        message: '–ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–æ–µ'
      }, { status: 400 });
    }

    // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –µ—Å—Ç—å –ª–∏ –°–û–•–†–ê–ù–ï–ù–ù–´–ô Face ID –ø—Ä–æ—Ñ–∏–ª—å
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–æ –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    // –î–ª—è –¥–µ–º–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π cookie
    
    const faceIdToken = request.cookies.get('face_id_registered')?.value;
    
    if (!faceIdToken) {
      console.log('‚ùå Face ID –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
      return NextResponse.json({
        success: false,
        message: 'Face ID –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ Face ID –≤ –¥–∞—à–±–æ—Ä–¥–µ.'
      }, { status: 404 });
    }

    // ‚úÖ –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    let registeredUser = null;
    
    try {
      if (!process.env.JWT_SECRET) {
        throw new Error('JWT_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
      
      registeredUser = jwt.verify(faceIdToken, process.env.JWT_SECRET) as any;
      console.log('üë§ –ù–∞–π–¥–µ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Face ID –¥–ª—è:', registeredUser.name);
      
    } catch (error) {
      console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Face ID —Ç–æ–∫–µ–Ω');
      return NextResponse.json({
        success: false,
        message: 'Face ID —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ Face ID –∑–∞–Ω–æ–≤–æ.'
      }, { status: 401 });
    }

    // ‚úÖ –°–û–ó–î–ê–ï–ú –ù–û–í–´–ô –¢–û–ö–ï–ù –î–õ–Ø –í–•–û–î–ê
    const newToken = jwt.sign({
      userId: registeredUser.userId,
      email: registeredUser.email,
      role: registeredUser.role,
      name: registeredUser.name
    }, process.env.JWT_SECRET, {
      expiresIn: '24h'
    });

    // –°–æ–∑–¥–∞–µ–º response —Å —Ç–æ–∫–µ–Ω–æ–º
    const response = NextResponse.json({
      success: true,
      message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${registeredUser.name}!`,
      user: {
        id: registeredUser.userId,
        name: registeredUser.name,
        email: registeredUser.email,
        role: registeredUser.role
      },
      authMethod: "face_recognition"
    });

    // ‚úÖ –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú COOKIE –î–õ–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
    const cookieOptions = [
      `auth_token=${newToken}`,
      'HttpOnly',
      'Path=/',
      `Max-Age=${24 * 60 * 60}`,
      'SameSite=Lax'
    ];

    if (process.env.NODE_ENV === 'production') {
      cookieOptions.push('Secure');
    }

    response.headers.set('Set-Cookie', cookieOptions.join('; '));

    console.log('‚úÖ Face ID –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω –¥–ª—è:', registeredUser.name);
    return response;

  } catch (error) {
    console.error('‚ùå Face Login: –æ—à–∏–±–∫–∞:', error);
    return NextResponse.json({
      success: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ Face ID'
    }, { status: 500 });
  }
}
