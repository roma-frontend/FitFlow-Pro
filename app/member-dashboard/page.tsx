// app/member-dashboard/page.tsx - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –º–∏–≥–∞–Ω–∏—è "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"
"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuth, useApiRequest } from "@/hooks/useAuth";
import { useToast } from "@/hooks/use-toast";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { AlertCircle, Heart, Zap, Home, Target, Loader2, Camera } from "lucide-react";

import { useWelcomeToast } from "@/hooks/useWelcomeToast"

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { MemberHeader } from "@/components/member/MemberHeader";
import QuickActions from "@/components/member/QuickActions";
import MemberProgress from "@/components/member/MemberProgress";
import UpcomingWorkouts from "@/components/member/UpcomingWorkouts";
import NextWorkout from "@/components/member/NextWorkout";
import FaceIdCard from "@/components/member/FaceIdCard";
import MiniProgress from "@/components/member/MiniProgress";
import SidebarCards from "@/components/member/SidebarCards";
import TipsSection from "@/components/member/TipsSection";
import { useLoaderStore, type LoaderType } from "@/stores/loaderStore";
import StaffLogoutLoader from "@/app/staff-login/components/StaffLogoutLoader";
import BodyAnalysisTrigger from "@/components/BodyAnalysisTrigger";
import BodyProgressTracker from "@/components/member/BodyProgressTracker";

interface Workout {
  id: string;
  type: string;
  date: string;
  time: string;
  duration: number;
  status: string;
  price: number;
  notes?: string;
  category?: "trainer" | "program";
  trainerName?: string;
  trainerSpecializations?: string[];
  programTitle?: string;
  instructor?: string;
  createdAt: string;
}

interface FaceIdStatus {
  isEnabled: boolean;
  lastUsed?: string;
  dateRegistered?: string;
  deviceCount?: number;
}

export default function MemberDashboard() {
  // –í–°–ï –•–£–ö–ò –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –í –°–ê–ú–û–ú –ù–ê–ß–ê–õ–ï, –ë–ï–ó –£–°–õ–û–í–ò–ô
  useWelcomeToast();
  const router = useRouter();
  const { user, loading, logout, refreshUser } = useAuth();
  const { get, post } = useApiRequest();
  const { toast } = useToast();
  const { loaderType, loaderProps, showLoader, hideLoader } = useLoaderStore();

  // –°–æ—Å—Ç–æ—è–Ω–∏—è
  const [isLoggingOut, setIsLoggingOut] = useState(false);
  const [workouts, setWorkouts] = useState<Workout[]>([]);
  const [workoutsLoading, setWorkoutsLoading] = useState(true);
  const [authChecked, setAuthChecked] = useState(false);
  const [accessDenied, setAccessDenied] = useState(false);
  const [stats, setStats] = useState({
    upcoming: 0,
    completed: 0,
    totalHours: 0,
    daysLeft: 15,
  });
  const [faceIdStatus, setFaceIdStatus] = useState<FaceIdStatus>({
    isEnabled: false,
    lastUsed: undefined,
    dateRegistered: undefined,
    deviceCount: 0,
  });
  const [faceIdLoading, setFaceIdLoading] = useState(true);

  // Helper —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ loader
  const isLogoutLoader = () => {
    return loaderType && loaderType === "logout";
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
  const fetchWorkouts = async () => {
    try {
      setWorkoutsLoading(true);
      const data = await get("/api/my-workouts");

      if (data.success) {
        setWorkouts(data.workouts);
        calculateStats(data.workouts);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:", error);
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
      });
    } finally {
      setWorkoutsLoading(false);
    }
  };

  const checkFaceIdStatus = async () => {
    try {
      setFaceIdLoading(true);
      console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Face ID...");

      const data = await get("/api/face-id/status");

      if (data.success) {
        setFaceIdStatus({
          isEnabled: data.isEnabled || false,
          lastUsed: data.lastUsed,
          dateRegistered: data.dateRegistered,
          deviceCount: data.deviceCount || 0,
        });
        console.log("‚úÖ Face ID —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω:", data);
      } else {
        console.log("‚ùå Face ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞:", data.error);
        setFaceIdStatus({
          isEnabled: false,
          lastUsed: undefined,
          dateRegistered: undefined,
          deviceCount: 0,
        });
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Face ID:", error);
      setFaceIdStatus({
        isEnabled: false,
        lastUsed: undefined,
        dateRegistered: undefined,
        deviceCount: 0,
      });
    } finally {
      setFaceIdLoading(false);
    }
  };

  const handleDisableFaceId = async () => {
    try {
      const data = await post("/api/face-id/disable", {});

      if (data.success) {
        setFaceIdStatus({
          isEnabled: false,
          lastUsed: undefined,
          dateRegistered: undefined,
          deviceCount: 0,
        });
        toast({
          title: "‚úÖ Face ID –æ—Ç–∫–ª—é—á–µ–Ω",
          description: "–ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
        });
      } else {
        throw new Error(data.error || "–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Face ID");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Face ID:", error);
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å Face ID",
      });
    }
  };

  const handleTestFaceId = () => {
    const testUrl = `/auth/face-auth?mode=test&session=${Date.now()}`;
    window.open(testUrl, "_blank");

    toast({
      title: "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Face ID",
      description: "–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞",
    });
  };

  const calculateStats = (workouts: Workout[]) => {
    const now = new Date();
    const upcoming = workouts.filter(
      (w) => new Date(w.date) > now && w.status !== "cancelled"
    ).length;
    const completed = workouts.filter((w) => w.status === "completed").length;
    const totalHours = workouts
      .filter((w) => w.status === "completed")
      .reduce((sum, w) => sum + w.duration / 60, 0);

    setStats({
      upcoming,
      completed,
      totalHours: Math.round(totalHours),
      daysLeft: 15,
    });
  };

  const handleLogout = async () => {
    try {
      console.log("üö™ MemberDashboard: –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞...");

      setIsLoggingOut(true);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º logout loader
      showLoader("logout", {
        userRole: user?.role || "member",
        userName: user?.name || user?.email?.split("@")[0] || "–£—á–∞—Å—Ç–Ω–∏–∫"
      });

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è loader
      await new Promise(resolve => setTimeout(resolve, 100));

      // –ù–ï —Å–∫—Ä—ã–≤–∞–µ–º loader - –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –¥–æ –∫–æ–Ω—Ü–∞
      await logout(true); // skipRedirect = true

    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:", error);
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å–∫—Ä—ã–≤–∞–µ–º loader –∏ –¥–µ–ª–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç
      hideLoader();
      setIsLoggingOut(false);
      router.push("/");
    }
  };

  const goToHomePage = () => {
    console.log("üè† MemberDashboard: –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...");
    router.push("/");
  };

  // useEffect —Ö—É–∫–∏
  useEffect(() => {
    console.log("üîç MemberDashboard –æ—Ç–ª–∞–¥–∫–∞:", {
      user,
      loading,
      isLoggingOut,
      loaderType,
      timestamp: new Date().toISOString()
    });
  }, [user, loading, isLoggingOut, loaderType]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const checkAuth = async () => {
      console.log("üîê MemberDashboard: –Ω–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");

      // –ï—Å–ª–∏ –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞ - –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
      if (isLoggingOut || isLogoutLoader()) {
        console.log("üö™ MemberDashboard: –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏...");
        return;
      }

      // –ï—Å–ª–∏ –µ—â–µ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ - –∂–¥–µ–º
      if (loading) {
        console.log("‚è≥ MemberDashboard: –æ–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ auth...");
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const storedUser = localStorage.getItem('auth_user');
      const storedToken = localStorage.getItem('auth_token');

      console.log("üì¶ MemberDashboard: –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage:", {
        hasUser: !!storedUser,
        hasToken: !!storedToken,
        currentUser: user
      });

      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
      if (!user) {
        console.log("‚ùå MemberDashboard: –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏");

        // –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (storedUser && storedToken) {
          console.log("üîÑ MemberDashboard: –ø—Ä–æ–±—É–µ–º refreshUser");
          try {
            await refreshUser();
            // –ü–æ—Å–ª–µ refreshUser —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            return;
          } catch (error) {
            console.error("‚ùå MemberDashboard: –æ—à–∏–±–∫–∞ refreshUser:", error);
          }
        }

        // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö - –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
        console.log("üö´ MemberDashboard: –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ");
        setAccessDenied(true);
        setAuthChecked(true);
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (user.role !== "member" && user.role !== "client") {
        console.log("üö´ MemberDashboard: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å:", user.role);
        setAccessDenied(true);
        setAuthChecked(true);
        return;
      }

      // –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
      console.log("‚úÖ MemberDashboard: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
      setAuthChecked(true);
    };

    checkAuth();
  }, [loading, user, refreshUser, isLoggingOut]); // –£–±—Ä–∞–ª–∏ loaderType –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (authChecked && user && (user.role === "member" || user.role === "client") && !accessDenied && !isLoggingOut && !isLogoutLoader()) {
      console.log("‚úÖ MemberDashboard: –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      fetchWorkouts();
      checkFaceIdStatus();
    }
  }, [authChecked, user, accessDenied, isLoggingOut]); // –£–±—Ä–∞–ª–∏ loaderType –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
  const upcomingWorkouts = workouts
    .filter((w) => new Date(w.date) > new Date() && w.status !== "cancelled")
    .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());

  const nextWorkout = upcomingWorkouts.length > 0 ? upcomingWorkouts[0] : null;

  // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è logout loader
  if (isLogoutLoader()) {
    console.log("üö™ MemberDashboard: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º logout loader...");
    return (
      <StaffLogoutLoader
        userRole={user?.role || "member"}
        userName={user?.name || user?.email?.split("@")[0] || "–£—á–∞—Å—Ç–Ω–∏–∫"}
        redirectUrl="/"
        isOpen={isLoggingOut}
      />
    );
  }

  // –ü–û–ö–ê–ó–´–í–ê–ï–ú –ó–ê–ì–†–£–ó–ö–£ –ü–û–ö–ê –ù–ï –ü–†–û–í–ï–†–ï–ù–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø
  if (loading || !authChecked) {
    console.log("‚è≥ MemberDashboard: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏...", {
      loading,
      authChecked
    });

    return (
      <div className="min-h-[100lvh] bg-gradient-to-br from-blue-50 to-green-50 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="p-8 text-center">
            <Loader2 className="h-12 w-12 text-blue-500 mx-auto mb-4 animate-spin" />
            <h2 className="text-xl font-semibold text-gray-900 mb-2">
              –ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞...
            </h2>
            <p className="text-gray-600">
              –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¢–û–õ–¨–ö–û –ü–û–°–õ–ï authChecked
  if (!isLoggingOut && !isLogoutLoader() && authChecked && (accessDenied || !user || (user.role !== "member" && user.role !== "client"))) {
    console.log("üö´ MemberDashboard: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ", {
      accessDenied,
      hasUser: !!user,
      userRole: user?.role,
      expectedRoles: ["member", "client"],
      isLoggingOut,
      loaderType,
      authChecked
    });

    return (
      <div className="min-h-[100lvh] bg-gray-50 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="p-8 text-center">
            <AlertCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
            <h2 className="text-xl font-semibold text-gray-900 mb-2">
              –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω
            </h2>
            <p className="text-gray-600 mb-6">
              –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
              {user ? ` –í–∞—à–∞ —Ä–æ–ª—å: ${user.role}` : " –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è."}
            </p>
            <div className="space-y-3">
              <Button
                onClick={goToHomePage}
                className="w-full"
              >
                <Home className="h-4 w-4 mr-2" />
                –ù–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </Button>
              {user && (
                <Button
                  onClick={handleLogout}
                  variant="outline"
                  className="w-full"
                >
                  –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
                </Button>
              )}
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞
  return (
    <div className="min-h-[100lvh] bg-gradient-to-br from-blue-50 to-green-50">
      {/* –•–µ–¥–µ—Ä */}
      <MemberHeader onLogout={handleLogout} />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
        <div className="mb-8">
          <div className="flex flex-col md:flex-row items-center justify-between mb-4 gap-4">
            <div className="flex flex-col md:flex-row items-center gap-3">
              <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center">
                <Heart className="h-6 w-6 text-white" />
              </div>
              <div className="text-center md:text-start">
                <h1 className="text-3xl md:text-4xl font-bold text-gray-900">
                  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <br />{user?.name || user?.email.split("@")[0]}!
                </h1>
                <p className="text-lg text-gray-600">
                  –í–∞—à –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤—å—é –∏ –æ—Ç–ª–∏—á–Ω–æ–π —Ñ–æ—Ä–º–µ
                </p>
              </div>
            </div>

            <Button
              onClick={goToHomePage}
              variant="outline"
              className="bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-blue-600 hover:to-indigo-600 flex items-center gap-2 hover:shadow-md transition-all text-white hover:text-white"
            >
              <Home className="h-4 w-4" />
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
            <Zap className="h-5 w-5 text-yellow-500" />
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </h2>
          <QuickActions stats={stats} />
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - —Å–µ–∫—Ü–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
          {/* –õ–ï–í–ê–Ø –ö–û–õ–û–ù–ö–ê - –ë–ª–∏–∂–∞–π—à–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ */}
          <div className="lg:col-span-2">
            <UpcomingWorkouts
              workouts={workouts}
              isLoading={workoutsLoading}
              stats={stats}
            />
          </div>

          {/* –ü–†–ê–í–ê–Ø –ö–û–õ–û–ù–ö–ê - –ë–æ–∫–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
          <div className="space-y-6">
            {/* –°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ */}
            <NextWorkout workout={nextWorkout} isLoading={workoutsLoading} />

            {/* Face ID –∫–∞—Ä—Ç–æ—á–∫–∞ */}
            <FaceIdCard
              status={faceIdStatus}
              isLoading={faceIdLoading}
              onTest={handleTestFaceId}
              onDisable={handleDisableFaceId}
            />

            {/* –ú–∏–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */}
            <MiniProgress stats={stats} />

            {/* –ë–æ–∫–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
            <SidebarCards stats={stats} onGoHome={goToHomePage} />
          </div>
        </div>

        {/* –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2">
            <Target className="h-5 w-5 text-purple-600" />
            –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </h2>
          <MemberProgress />
        </div>

        {/* –°–æ–≤–µ—Ç—ã */}
        <TipsSection />
      </div>
    </div>
  );
}