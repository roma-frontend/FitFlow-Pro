// app/auth/face-auth/FaceAuthContent.tsx
"use client";

import { useEffect, useState } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import FaceAuthOptimized from "@/components/auth/face-auth/FaceAuthOptimized";
import MainHeader from "@/components/MainHeader";
import { useAuth } from "@/hooks/useAuth";
import { useFaceIdSmart } from "@/hooks/useFaceIdSmart";
import { SwitchModeType, FaceAuthMode } from "@/types/face-auth.types";
import { toast } from "@/hooks/use-toast";
import { FaceIdQuickLogin } from "@/components/auth/FaceIdQuickLogin";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Eye, Shield, ArrowRight, Info, Users, Settings } from "lucide-react";
import { cn } from "@/lib/utils";

export default function FaceAuthContent() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const { user, refreshUser } = useAuth();
  const {
    isFaceIdRegistered,
    faceIdStatus,
    checkFaceIdStatus,
    profiles
  } = useFaceIdSmart();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const [mode, setMode] = useState<FaceAuthMode>("login");
  const [viewMode, setViewMode] = useState<SwitchModeType>("modern");
  const [showQuickLogin, setShowQuickLogin] = useState(false);
  const [isRedirecting, setIsRedirecting] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º redirect –ø–∞—Ä–∞–º–µ—Ç—Ä
  const redirectParam = searchParams.get("redirect");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Face ID –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    checkFaceIdStatus();
  }, []);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ Face ID
  useEffect(() => {
    if (user && !isFaceIdRegistered) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–æ Face ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      setMode("register");
      toast({
        title: "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Face ID",
        description: "–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±—É–¥—É—â–µ–º –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Face ID",
      });
    } else if (!user && isFaceIdRegistered) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–æ Face ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      setMode("login");
      setShowQuickLogin(true);
    } else if (user && isFaceIdRegistered) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ Face ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      toast({
        title: "Face ID —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
        description: "–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å Face ID –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      });
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      router.push(redirectParam || "/member-dashboard?tab=security");
    }
  }, [user, isFaceIdRegistered, router, redirectParam]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const handleSuccess = async (userData: any) => {
    console.log("‚úÖ –£—Å–ø–µ—à–Ω–∞—è Face ID –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:", userData);

    setIsRedirecting(true);

    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await refreshUser();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
      if (userData.action === "face_id_registered") {
        toast({
          title: "‚úÖ Face ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω!",
          description: userData.message || "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Face ID –¥–ª—è –≤—Ö–æ–¥–∞",
        });

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await new Promise(resolve => setTimeout(resolve, 1500));

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if (redirectParam) {
          router.push(redirectParam);
        } else {
          router.push("/member-dashboard?tab=security");
        }
      } else if (userData.action === "face_login_success") {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º URL –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ redirect –ø–∞—Ä–∞–º–µ—Ç—Ä
        const targetUrl = userData.dashboardUrl || redirectParam || "/member-dashboard";
        
        toast({
          title: "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
          description: `–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ Face ID`,
        });

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await new Promise(resolve => setTimeout(resolve, 1000));

        router.push(targetUrl);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å–ª–µ Face ID –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:", error);
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
      });
    } finally {
      setIsRedirecting(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleSwitchMode = (newMode: SwitchModeType) => {
    setViewMode(newMode);
    console.log("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:", newMode);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É login/register
  const handleToggleAuthMode = () => {
    if (user && !isFaceIdRegistered) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Å—Ç–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      toast({
        title: "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Face ID",
        description: "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Face ID –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±—É–¥—É—â–µ–º.",
      });
      return;
    }
    
    setMode(mode === "login" ? "register" : "login");
  };

  // –†–µ–Ω–¥–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  return (
    <>
      <MainHeader />
      
      <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä redirect */}
        {redirectParam && (
          <div className="bg-blue-500/90 backdrop-blur-sm text-white text-center py-2 px-4">
            <p className="text-sm">
              üìç –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </p>
          </div>
        )}

        <div className="container mx-auto px-4 py-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              {mode === "login" ? "Face ID –≤—Ö–æ–¥" : "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Face ID"}
            </h1>
            <p className="text-lg text-gray-600">
              {mode === "login" 
                ? "–ë—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥ —Å –ø–æ–º–æ—â—å—é –±–∏–æ–º–µ—Ç—Ä–∏–∏" 
                : "–°–æ–∑–¥–∞–π—Ç–µ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞"
              }
            </p>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="max-w-6xl mx-auto">
            {showQuickLogin && mode === "login" ? (
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              <div className="grid lg:grid-cols-2 gap-8">
                <div>
                  <FaceIdQuickLogin 
                    variant="hero"
                    onSuccess={() => {
                      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ —É–∂–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                      setIsRedirecting(true);
                    }}
                  />
                </div>
                
                <div className="space-y-6">
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Face ID */}
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <Shield className="h-5 w-5 mr-2 text-green-600" />
                        –í–∞—à Face ID –∞–∫—Ç–∏–≤–µ–Ω
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-4">
                        {faceIdStatus?.profile && (
                          <div className="p-4 bg-green-50 rounded-lg">
                            <p className="text-sm text-green-800">
                              <strong>–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω:</strong> {new Date(faceIdStatus.profile.createdAt).toLocaleDateString()}
                            </p>
                            {faceIdStatus.profile.lastUsedAt && (
                              <p className="text-sm text-green-800 mt-1">
                                <strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥:</strong> {new Date(faceIdStatus.profile.lastUsedAt).toLocaleDateString()}
                              </p>
                            )}
                            <p className="text-sm text-green-800 mt-1">
                              <strong>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π:</strong> {faceIdStatus.profile.usageCount}
                            </p>
                          </div>
                        )}
                        
                        <Alert>
                          <Info className="h-4 w-4" />
                          <AlertDescription>
                            Face ID –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞. 
                            –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.
                          </AlertDescription>
                        </Alert>
                      </div>
                    </CardContent>
                  </Card>

                  {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤—Ö–æ–¥–∞ */}
                  <Card>
                    <CardHeader>
                      <CardTitle>–î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –≤—Ö–æ–¥–∞</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <Button
                        variant="outline"
                        className="w-full justify-between"
                        onClick={() => router.push("/member-login" + (redirectParam ? `?redirect=${encodeURIComponent(redirectParam)}` : ""))}
                      >
                        <span className="flex items-center">
                          <Users className="h-4 w-4 mr-2" />
                          –í—Ö–æ–¥ —Å –ø–∞—Ä–æ–ª–µ–º
                        </span>
                        <ArrowRight className="h-4 w-4" />
                      </Button>
                      
                      {user && (
                        <Button
                          variant="outline"
                          className="w-full justify-between"
                          onClick={() => router.push("/member-dashboard?tab=security")}
                        >
                          <span className="flex items-center">
                            <Settings className="h-4 w-4 mr-2" />
                            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Face ID
                          </span>
                          <ArrowRight className="h-4 w-4" />
                        </Button>
                      )}
                    </CardContent>
                  </Card>
                </div>
              </div>
            ) : (
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Face Auth
              <div className="grid lg:grid-cols-3 gap-8">
                <div className="lg:col-span-2">
                  <FaceAuthOptimized
                    mode={mode}
                    onSuccess={handleSuccess}
                    viewMode={viewMode}
                    onSwitchMode={handleSwitchMode}
                  />
                  
                  {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ */}
                  {!user && (
                    <div className="mt-6 text-center">
                      <button
                        onClick={handleToggleAuthMode}
                        disabled={isRedirecting}
                        className="text-sm text-gray-600 hover:text-gray-900 transition-colors"
                      >
                        {mode === "login" ? (
                          <>
                            –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <span className="text-blue-600 font-medium">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>
                          </>
                        ) : (
                          <>
                            –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <span className="text-blue-600 font-medium">–í–æ–π—Ç–∏</span>
                          </>
                        )}
                      </button>
                    </div>
                  )}
                </div>
                
                <div className="space-y-6">
                  {/* –°—Ç–∞—Ç—É—Å Face ID */}
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">–°—Ç–∞—Ç—É—Å Face ID</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <div className={cn(
                          "p-3 rounded-lg text-center",
                          isFaceIdRegistered 
                            ? "bg-green-50 text-green-800" 
                            : "bg-gray-50 text-gray-800"
                        )}>
                          <Eye className="h-8 w-8 mx-auto mb-2" />
                          <p className="font-medium">
                            {isFaceIdRegistered 
                              ? "Face ID –∞–∫—Ç–∏–≤–µ–Ω" 
                              : "Face ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
                            }
                          </p>
                          {profiles.length > 0 && (
                            <p className="text-sm mt-1">
                              –ü—Ä–æ—Ñ–∏–ª–µ–π: {profiles.length} –∏–∑ 3
                            </p>
                          )}
                        </div>
                        
                        {!user && mode === "register" && (
                          <Alert>
                            <AlertDescription>
                              –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Face ID –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                            </AlertDescription>
                          </Alert>
                        )}
                      </div>
                    </CardContent>
                  </Card>

                  {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      {!user ? (
                        <>
                          <Button
                            variant="outline"
                            className="w-full"
                            onClick={() => router.push("/member-login" + (redirectParam ? `?redirect=${encodeURIComponent(redirectParam)}` : ""))}
                          >
                            –í—Ö–æ–¥ —Å –ø–∞—Ä–æ–ª–µ–º
                          </Button>
                          <Button
                            variant="outline"
                            className="w-full"
                            onClick={() => router.push("/staff-login")}
                          >
                            –í—Ö–æ–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
                          </Button>
                        </>
                      ) : (
                        <>
                          <Button
                            variant="outline"
                            className="w-full"
                            onClick={() => router.push("/member-dashboard")}
                          >
                            –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                          </Button>
                          <Button
                            variant="outline"
                            className="w-full"
                            onClick={() => router.push("/setup-face-recognition")}
                          >
                            –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Face ID
                          </Button>
                        </>
                      )}
                    </CardContent>
                  </Card>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}