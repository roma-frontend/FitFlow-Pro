// app/staff-login/StaffLoginContent.tsx - –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ï–î–ò–ù–´–ú LOADER
"use client";

import { useStaffAuth } from "@/hooks/useStaffAuth";
import { StaffLoginForm } from "@/components/staff/StaffLoginForm";
import { StaffForgotPasswordForm } from "@/components/staff/StaffForgotPasswordForm";
import { StaffAuthNavigation } from "@/components/staff/StaffAuthNavigation";
import { StaffSecurityInfo } from "@/components/staff/StaffSecurityInfo";
import { StaffDevelopmentTools } from "@/components/staff/StaffDevelopmentTools";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Shield, Users, Zap, TrendingUp, ArrowRight, CheckCircle, AlertTriangle, Lock, Mail, Loader2, Eye, Settings } from "lucide-react";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { ShieldButtonV1 } from "./components/StaffLoginButton";
import { GoogleLoginButton } from "@/components/auth/GoogleLoginButton";
import { useLoaderStore } from "@/stores/loaderStore";
import { FaceIdQuickAccess } from "@/components/FaceIdQuickAccess";
import StaffLoginLoader from "./components/StaffLoginLoader";
import { UserRole } from "@/lib/permissions";

// –£—Ç–∏–ª–∏—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –∫ UserRole
const toUserRole = (role: string | null | undefined): UserRole => {
  const validRoles: UserRole[] = ["super-admin", "admin", "manager", "trainer", "member", "client"];
  if (role && validRoles.includes(role as UserRole)) {
    return role as UserRole;
  }
  return "member"; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
};

// ‚úÖ –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ø–µ—Ä–µ–¥ —Ö—É–∫–∞–º–∏ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ loader
function shouldShowLoader() {
  if (typeof window === 'undefined') return false;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—Ç –æ—Ç Google OAuth
  const urlParams = new URLSearchParams(window.location.search);
  const hasGoogleParams = urlParams.get('code') && urlParams.get('state');
  const googleInProgress = sessionStorage.getItem('google_login_in_progress') === 'true';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  const isRedirecting = sessionStorage.getItem('is_redirecting') === 'true';
  
  return (hasGoogleParams && googleInProgress) || isRedirecting;
}

export default function StaffLoginContent() {
  const router = useRouter();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  
  // ‚úÖ –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ loader –∏–∑ store
  const { loaderType, loaderProps } = useLoaderStore();
  
  // ‚úÖ –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ loader
  const [showLoaderImmediately] = useState(() => shouldShowLoader());

  let staffAuthData;
  try {
    staffAuthData = useStaffAuth();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ useStaffAuth:', error);
    // Fallback –¥–∞–Ω–Ω—ã–µ
    staffAuthData = {
      isLoading: false,
      showForgotPassword: false,
      resetEmail: "",
      resetSent: false,
      setShowForgotPassword: () => {},
      setResetEmail: () => {},
      setResetSent: () => {},
      handleStaffLogin: async () => ({ success: false }),
      handlePasswordReset: async () => {},
      handleSuperAdminQuickLogin: async () => ({ success: false }),
    };
  }

  const {
    isLoading,
    showForgotPassword,
    resetEmail,
    resetSent,
    setShowForgotPassword,
    setResetEmail,
    setResetSent,
    handleStaffLogin,
    handlePasswordReset,
    handleSuperAdminQuickLogin,
  } = staffAuthData;

  // ‚úÖ –ï–î–ò–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π loader –∫–æ–≥–¥–∞:
  // 1. loaderType = "login"
  // 2. –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫–∞–∑–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å
  // 3. –í–æ–∑–≤—Ä–∞—Ç –æ—Ç Google OAuth
  if ((loaderType === "login" && loaderProps) || showLoaderImmediately) {
    const defaultProps = {
      userRole: "admin" as UserRole,
      userName: "–ó–∞–≥—Ä—É–∑–∫–∞...",
      dashboardUrl: "/admin"
    };
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç Google OAuth, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (showLoaderImmediately && !loaderProps) {
      const isStaff = sessionStorage.getItem('google_login_is_staff') === 'true';
      const savedTarget = sessionStorage.getItem('google_login_target_url');
      const staffRole = sessionStorage.getItem('google_login_staff_role');
      
      return (
        <StaffLoginLoader
          userRole={toUserRole(staffRole) || (isStaff ? "admin" : "member")}
          userName="–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
          dashboardUrl={savedTarget || "/admin"}
          isOpen={true}
        />
      );
    }
    
    return (
      <StaffLoginLoader
        userRole={loaderProps?.userRole || defaultProps.userRole}
        userName={loaderProps?.userName || defaultProps.userName}
        dashboardUrl={loaderProps?.dashboardUrl || defaultProps.dashboardUrl}
        isOpen={true}
      />
    );
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await handleStaffLogin({ email, password });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
    }
  };

  const handleFormSubmit = async (formData: any): Promise<void> => {
    try {
      await handleStaffLogin(formData);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
    }
  };

  const handleQuickLogin = async (): Promise<void> => {
    try {
      await handleSuperAdminQuickLogin();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞:', error);
    }
  };

  const handleBackToLogin = () => {
    setShowForgotPassword(false);
  };

  const handleResendReset = () => {
    setResetSent(false);
    setResetEmail("");
  };

  // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç Google OAuth
  useEffect(() => {
    const checkGoogleOAuthReturn = () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ Google OAuth
      const googleLoginInProgress = sessionStorage.getItem('google_login_in_progress');
      const urlParams = new URLSearchParams(window.location.search);
      const code = urlParams.get('code');
      const state = urlParams.get('state');
      
      // –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç –∏ loader –µ—â–µ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω
      if (googleLoginInProgress === 'true' && code && state && !loaderType) {
        console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç –ø–æ—Å–ª–µ Google OAuth –Ω–∞ staff-login - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º loader');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const isStaff = sessionStorage.getItem('google_login_is_staff') === 'true';
        const savedRedirect = sessionStorage.getItem('google_login_target_url') || 
                             sessionStorage.getItem('google_login_redirect');
        const staffRole = sessionStorage.getItem('google_login_staff_role');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º loader –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
        const { showLoader } = useLoaderStore.getState();
        showLoader("login", {
          userRole: toUserRole(staffRole) || (isStaff ? "admin" : "member"),
          userName: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...",
          dashboardUrl: savedRedirect || "/admin"
        });
      }
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkGoogleOAuthReturn();
  }, [loaderType]);

  if (showForgotPassword) {
    return (
      <div className="min-h-[100lvh] bg-gradient-to-br from-slate-700 via-blue-700 to-indigo-800 flex items-center justify-center p-4">
        <div className="max-w-sm w-full">
          <StaffForgotPasswordForm
            resetEmail={resetEmail}
            resetSent={resetSent}
            isLoading={isLoading}
            onEmailChange={setResetEmail}
            onSubmit={handlePasswordReset}
            onBack={handleBackToLogin}
            onResend={handleResendReset}
          />
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-[100lvh] bg-gradient-to-br from-slate-700 via-blue-700 to-indigo-800">
      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è */}
      <div className="lg:hidden">
        <div className="min-h-[100lvh] flex flex-col">
          <div className="flex-1 flex flex-col justify-center px-6 py-8">
            
            <ShieldButtonV1 />

            <div className="w-full max-w-sm mx-auto">
              <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl rounded-3xl overflow-hidden">
                <CardContent className="p-6">
                  <form onSubmit={handleSubmit} className="space-y-4">
                    <div className="relative">
                      <Mail className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                      <input
                        type="email"
                        placeholder="–°–ª—É–∂–µ–±–Ω—ã–π email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                        required
                      />
                    </div>

                    <div className="relative">
                      <Lock className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                      <input
                        type="password"
                        placeholder="–ü–∞—Ä–æ–ª—å"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        className="w-full pl-12 pr-4 py-3 border border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50/50 text-gray-900 placeholder-gray-500"
                        required
                      />
                    </div>

                    <button
                      type="submit"
                      disabled={isLoading || !email || !password}
                      className="w-full py-3 px-4 bg-gradient-to-r from-slate-600 to-blue-600 text-white font-medium rounded-2xl hover:from-slate-700 hover:to-blue-700 focus:ring-4 focus:ring-blue-300 transition-all disabled:opacity-50 disabled:cursor-not-allowed shadow-lg"
                    >
                      {isLoading && !(loaderType === "login") ? (
                        <div className="flex items-center justify-center">
                          <Loader2 className="h-5 w-5 animate-spin mr-2" />
                          –ü—Ä–æ–≤–µ—Ä–∫–∞...
                        </div>
                      ) : (
                        "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
                      )}
                    </button>
                  </form>

                  {/* –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å */}
                  <div className="mt-4 text-center">
                    <button
                      onClick={() => setShowForgotPassword(true)}
                      className="text-sm text-gray-500 hover:text-gray-700 transition-colors"
                    >
                      –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                    </button>
                  </div>

                  {/* –†–æ–ª–∏ */}
                  <div className="mt-6 space-y-2">
                    <h4 className="text-xs font-medium text-gray-500 uppercase tracking-wide">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏</h4>
                    <div className="grid grid-cols-2 gap-2 text-xs">
                      <div className="flex items-center p-2 bg-purple-50 rounded-lg">
                        <div className="w-2 h-2 bg-purple-500 rounded-full mr-2" />
                        <span className="text-purple-700">–°—É–ø–µ—Ä –ê–¥–º–∏–Ω</span>
                      </div>
                      <div className="flex items-center p-2 bg-red-50 rounded-lg">
                        <div className="w-2 h-2 bg-red-500 rounded-full mr-2" />
                        <span className="text-red-700">–ê–¥–º–∏–Ω</span>
                      </div>
                      <div className="flex items-center p-2 bg-green-50 rounded-lg">
                        <div className="w-2 h-2 bg-green-500 rounded-full mr-2" />
                        <span className="text-green-700">–ú–µ–Ω–µ–¥–∂–µ—Ä</span>
                      </div>
                      <div className="flex items-center p-2 bg-orange-50 rounded-lg">
                        <div className="w-2 h-2 bg-orange-500 rounded-full mr-2" />
                        <span className="text-orange-700">–¢—Ä–µ–Ω–µ—Ä</span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <div className="mt-6 space-y-3">
                <GoogleLoginButton
                  isStaff={true}
                  className="bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl hover:bg-white/30 transition-all text-white"
                />
                <button
                  onClick={() => router.push("/member-login")}
                  className="w-full flex items-center justify-center p-3 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl hover:bg-white/30 transition-all text-white"
                >
                  <Users className="h-5 w-5 mr-2" />
                  <span className="font-medium">–í—Ö–æ–¥ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                </button>

                <button
                  onClick={() => router.push("/auth/face-auth")}
                  className="w-full flex items-center justify-center p-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl hover:bg-white/20 transition-all text-white/80"
                >
                  <Eye className="h-5 w-5 mr-2" />
                  <span className="font-medium">Face ID –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</span>
                </button>
              </div>

              {/* –°–∏—Å—Ç–µ–º–Ω—ã–π —Å—Ç–∞—Ç—É—Å */}
              <div className="mt-6 p-4 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
                <div className="flex items-center justify-between mb-3">
                  <h4 className="text-sm font-medium text-white">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h4>
                  <div className="flex items-center">
                    <div className="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse" />
                    <span className="text-xs text-green-300">–û–Ω–ª–∞–π–Ω</span>
                  </div>
                </div>
                <div className="space-y-1 text-xs text-white/70">
                  <div className="flex justify-between">
                    <span>–°–µ—Ä–≤–µ—Ä</span>
                    <span className="text-green-300">‚úì –†–∞–±–æ—Ç–∞–µ—Ç</span>
                  </div>
                  <div className="flex justify-between">
                    <span>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</span>
                    <span className="text-green-300">‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∞</span>
                  </div>
                  <div className="flex justify-between">
                    <span>–†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
                    <span className="text-green-300">‚úì –ê–∫—Ç—É–∞–ª—å–Ω–æ</span>
                  </div>
                </div>
              </div>

              {/* Development Tools */}
              {process.env.NODE_ENV === "development" && (
                <div className="mt-4">
                  <button
                    onClick={handleQuickLogin}
                    disabled={isLoading}
                    className="w-full p-2 bg-yellow-500/20 border border-yellow-400/30 rounded-xl text-yellow-300 text-xs hover:bg-yellow-500/30 transition-all"
                  >
                    üöÄ Quick Super Admin (DEV)
                  </button>
                </div>
              )}

              {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
              <div className="mt-6 flex justify-center space-x-4 text-xs text-white/50">
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-green-400 rounded-full mr-2" />
                  <span>SSL</span>
                </div>
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-blue-400 rounded-full mr-2" />
                  <span>2FA</span>
                </div>
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-purple-400 rounded-full mr-2" />
                  <span>Audit</span>
                </div>
              </div>

            </div>
          </div>
        </div>
      </div>

      {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è) */}
      <div className="hidden lg:block py-8 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
        <div className="max-w-6xl mx-auto">

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è FitFlow Pro
            </h1>
            <p className="text-lg text-gray-600">
              –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
            </p>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –≤–∏–¥–µ "–∫–Ω–∏–≥–∏" */}
          <div className="grid lg:grid-cols-2 gap-8 items-start">

            {/* –õ–µ–≤–∞—è "—Å—Ç—Ä–∞–Ω–∏—Ü–∞" - –í–∞—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã */}
            <div className="order-1 space-y-6">
              <StaffLoginForm
                onSubmit={handleFormSubmit}
                isLoading={isLoading}
              />

              <StaffAuthNavigation
                isLoading={isLoading}
                onShowForgotPassword={() => setShowForgotPassword(true)}
              />

              <StaffDevelopmentTools
                isLoading={isLoading}
                onQuickLogin={handleQuickLogin}
              />
            </div>

            {/* –ü—Ä–∞–≤–∞—è "—Å—Ç—Ä–∞–Ω–∏—Ü–∞" - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="order-1 lg:order-2 space-y-6">

              <StaffSecurityInfo />

              {/* –†–æ–ª–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
              <Card className="bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-blue-900 flex items-center">
                    <Users className="h-5 w-5 mr-2" />
                    –†–æ–ª–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                  </CardTitle>
                </CardHeader>
                <CardContent className="text-sm text-blue-800 space-y-3">
                  <div className="space-y-3">
                    <div className="p-3 bg-white/60 rounded-lg border border-blue-200">
                      <div className="flex items-center mb-2">
                        <Shield className="h-4 w-4 text-purple-600 mr-2" />
                        <span className="font-medium text-blue-900">–°—É–ø–µ—Ä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</span>
                      </div>
                      <p className="text-xs text-blue-700">
                        –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã
                      </p>
                    </div>

                    <div className="p-3 bg-white/60 rounded-lg border border-blue-200">
                      <div className="flex items-center mb-2">
                        <Shield className="h-4 w-4 text-red-600 mr-2" />
                        <span className="font-medium text-blue-900">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</span>
                      </div>
                      <p className="text-xs text-blue-700">
                        –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                      </p>
                    </div>

                    <div className="p-3 bg-white/60 rounded-lg border border-blue-200">
                      <div className="flex items-center mb-2">
                        <TrendingUp className="h-4 w-4 text-green-600 mr-2" />
                        <span className="font-medium text-blue-900">–ú–µ–Ω–µ–¥–∂–µ—Ä</span>
                      </div>
                      <p className="text-xs text-blue-700">
                        –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ –∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
                      </p>
                    </div>

                    <div className="p-3 bg-white/60 rounded-lg border border-blue-200">
                      <div className="flex items-center mb-2">
                        <Zap className="h-4 w-4 text-orange-600 mr-2" />
                        <span className="font-medium text-blue-900">–¢—Ä–µ–Ω–µ—Ä</span>
                      </div>
                      <p className="text-xs text-blue-700">
                        –†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <Card className="bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-purple-900 flex items-center">
                    <Zap className="h-5 w-5 mr-2" />
                    –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <button
                    onClick={() => router.push("/member-login")}
                    className="w-full flex items-center justify-between p-3 bg-gradient-to-r from-blue-500/10 to-indigo-500/10 border border-blue-300/30 rounded-lg hover:from-blue-500/20 hover:to-indigo-500/20 transition-all text-left group"
                  >
                    <div className="flex items-center">
                      <Users className="h-4 w-4 text-blue-600 mr-3" />
                      <div>
                        <div className="font-medium text-purple-900">–í—Ö–æ–¥ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                        <div className="text-xs text-purple-700">–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤—Ö–æ–¥</div>
                      </div>
                    </div>
                    <ArrowRight className="h-4 w-4 text-blue-600 group-hover:translate-x-1 transition-transform" />
                  </button>

                  <button
                    onClick={() => router.push("/auth/face-auth")}
                    className="w-full flex items-center justify-between p-3 bg-gradient-to-r from-green-500/10 to-emerald-500/10 border border-green-300/30 rounded-lg hover:from-green-500/20 hover:to-emerald-500/20 transition-all text-left group"
                  >
                    <div className="flex items-center">
                      <Shield className="h-4 w-4 text-green-600 mr-3" />
                      <div>
                        <div className="font-medium text-purple-900">Face ID –≤—Ö–æ–¥</div>
                        <div className="text-xs text-purple-700">–ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</div>
                      </div>
                    </div>
                    <ArrowRight className="h-4 w-4 text-green-600 group-hover:translate-x-1 transition-transform" />
                  </button>
                </CardContent>
              </Card>

              {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
              <Card className="bg-gradient-to-br from-orange-50 to-red-50 border-orange-200 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg text-orange-900 flex items-center">
                    <AlertTriangle className="h-5 w-5 mr-2" />
                    –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
                  </CardTitle>
                </CardHeader>
                <CardContent className="text-sm text-orange-800 space-y-3">
                  <div className="space-y-2">
                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç</span>
                        <p className="text-xs text-orange-700 mt-1">–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: 2 –º–∏–Ω –Ω–∞–∑–∞–¥</p>
                      </div>
                    </div>

                    <div className="flex items-start">
                      <CheckCircle className="h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0" />
                      <div>
                        <span className="font-medium">–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
                        <p className="text-xs text-orange-700 mt-1">–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è –≤ 03:00</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

            </div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É */}
          <div className="mt-12 text-center">
            <Card className="bg-gradient-to-r from-gray-50 to-slate-100 border-gray-200 shadow-sm">
              <CardContent className="py-6">
                <div className="flex flex-col sm:flex-row items-center justify-center gap-6 text-sm text-gray-600">
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2" />
                    <span>–ó–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</span>
                  </div>
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-2" />
                    <span>–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π</span>
                  </div>
                  <div className="flex items-center">
                    <span className="w-2 h-2 bg-purple-500 rounded-full mr-2" />
                    <span>24/7 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

        </div>
      </div>
      <FaceIdQuickAccess variant="floating" className="bottom-10 right-10 hidden lg:block" />
    </div>
  );
}