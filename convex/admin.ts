// convex/admin.ts (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º)
import { mutation, query } from "./_generated/server";
import { v } from "convex/values";

export const createAdmin = mutation({
  args: {
    name: v.string(),
    email: v.string(),
    password: v.string(),
    photoUrl: v.optional(v.string()),
    faceDescriptor: v.optional(v.array(v.number())),
    createdBy: v.optional(v.id("users")),
  },
  handler: async (ctx, args) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const existingUser = await ctx.db
      .query("users")
      .withIndex("by_email", (q) => q.eq("email", args.email))
      .first();

    if (existingUser) {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(args.email)) {
      throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email");
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è (–µ—Å–ª–∏ –Ω–µ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω)
    if (args.password.length < 6 && !args.password.startsWith('$2')) {
      throw new Error("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤");
    }

    const userId = await ctx.db.insert("users", {
      email: args.email,
      password: args.password,
      name: args.name,
      role: "admin",
      isActive: true,
      createdAt: Date.now(),
      createdBy: args.createdBy,
      photoUrl: args.photoUrl,
      faceDescriptor: args.faceDescriptor || [],
    });
    
    return userId;
  },
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
export const createSuperAdmin = mutation({
  args: {
    name: v.string(),
    email: v.string(),
    password: v.string(),
  },
  handler: async (ctx, args) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const existingSuperAdmin = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .first();

    if (existingSuperAdmin) {
      throw new Error("–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    }

    const userId = await ctx.db.insert("users", {
      email: args.email,
      password: args.password,
      name: args.name,
      role: "super-admin",
      isActive: true,
      createdAt: Date.now(),
    });
    
    return userId;
  },
});

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–µ
export const getSuperAdmin = query({
  handler: async (ctx) => {
    console.log("üîÑ Convex Query: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞");

    const superAdmin = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .first();

    if (!superAdmin) {
      console.log("‚ùå Convex Query: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω");
      return null;
    }

    console.log("‚úÖ Convex Query: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω:", superAdmin.email);
    return superAdmin;
  },
});

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤ (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ)
export const getAllSuperAdmins = query({
  handler: async (ctx) => {
    console.log("üîÑ Convex Query: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤");

    const superAdmins = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .collect();

    console.log("‚úÖ Convex Query: –ù–∞–π–¥–µ–Ω–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤:", superAdmins.length);
    return superAdmins;
  },
});

// –ú—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ (–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è)
export const deactivateSuperAdmin = mutation({
  args: {
    userId: v.id("users"),
  },
  handler: async (ctx, args) => {
    console.log("üîÑ Convex Mutation: –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:", args.userId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º
    const user = await ctx.db.get(args.userId);
    if (!user) {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    if (user.role !== "super-admin") {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    const activeSuperAdmins = await ctx.db
      .query("users")
      .filter((q) => q.and(
        q.eq(q.field("role"), "super-admin"),
        q.eq(q.field("isActive"), true)
      ))
      .collect();

    if (activeSuperAdmins.length <= 1) {
      throw new Error("–ù–µ–ª—å–∑—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    }

    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    await ctx.db.patch(args.userId, {
      isActive: false,
      updatedAt: Date.now(),
    });

    console.log("‚úÖ Convex Mutation: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
    return { success: true };
  },
});

// –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ (–û–ü–ê–°–ù–û!)
export const deleteSuperAdmin = mutation({
  args: {
    userId: v.id("users"),
    confirmationCode: v.string(), // –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  },
  handler: async (ctx, args) => {
    console.log("üîÑ Convex Mutation: –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:", args.userId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (args.confirmationCode !== "DELETE_SUPER_ADMIN_CONFIRMED") {
      throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º
    const user = await ctx.db.get(args.userId);
    if (!user) {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    if (user.role !== "super-admin") {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    const allSuperAdmins = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .collect();

    if (allSuperAdmins.length <= 1) {
      throw new Error("–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    }

    // –§–∏–∑–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    await ctx.db.delete(args.userId);

    console.log("‚úÖ Convex Mutation: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Ñ–∏–∑–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω");
    return { success: true };
  },
});

// –£–¥–∞–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –ø–æ email
export const deleteSuperAdminByEmail = mutation({
  args: {
    email: v.string(),
    confirmationCode: v.string(),
  },
  handler: async (ctx, args) => {
    console.log("üîÑ Convex Mutation: –£–¥–∞–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –ø–æ email:", args.email);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (args.confirmationCode !== "DELETE_SUPER_ADMIN_CONFIRMED") {
      throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è");
    }

    // –ù–∞—Ö–æ–¥–∏–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –ø–æ email
    const superAdmin = await ctx.db
      .query("users")
      .withIndex("by_email", (q) => q.eq("email", args.email))
      .first();

    if (!superAdmin) {
      throw new Error("–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    if (superAdmin.role !== "super-admin") {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    const allSuperAdmins = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .collect();

    if (allSuperAdmins.length <= 1) {
      throw new Error("–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    }

    // –§–∏–∑–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    await ctx.db.delete(superAdmin._id);

    console.log("‚úÖ Convex Mutation: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω –ø–æ email");
    return { success: true };
  },
});

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
export const restoreSuperAdmin = mutation({
  args: {
    userId: v.id("users"),
  },
  handler: async (ctx, args) => {
    console.log("üîÑ Convex Mutation: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:", args.userId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const user = await ctx.db.get(args.userId);
    if (!user) {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    if (user.role !== "super-admin") {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    await ctx.db.patch(args.userId, {
      isActive: true,
      updatedAt: Date.now(),
    });

    console.log("‚úÖ Convex Mutation: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    return { success: true };
  },
});

// –°–º–µ–Ω–∞ —Ä–æ–ª–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
export const demoteSuperAdmin = mutation({
  args: {
    userId: v.id("users"),
    confirmationCode: v.string(),
  },
  handler: async (ctx, args) => {
    console.log("üîÑ Convex Mutation: –ü–æ–Ω–∏–∂–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:", args.userId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (args.confirmationCode !== "DEMOTE_SUPER_ADMIN_CONFIRMED") {
      throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const user = await ctx.db.get(args.userId);
    if (!user) {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    if (user.role !== "super-admin") {
      throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    const allSuperAdmins = await ctx.db
      .query("users")
      .filter((q) => q.eq(q.field("role"), "super-admin"))
      .collect();

    if (allSuperAdmins.length <= 1) {
      throw new Error("–ù–µ–ª—å–∑—è –ø–æ–Ω–∏–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    }

    // –ü–æ–Ω–∏–∂–∞–µ–º –¥–æ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    await ctx.db.patch(args.userId, {
      role: "admin",
      updatedAt: Date.now(),
    });

    console.log("‚úÖ Convex Mutation: –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø–æ–Ω–∏–∂–µ–Ω –¥–æ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞");
    return { success: true };
  },
});