// utils/faceIdUtils.ts - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Face ID
export interface FaceIdProfile {
  id: string;
  userId: string;
  created: string;
  lastUsed?: string;
}

export const faceIdUtils = {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Face ID –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  isSupported(): boolean {
    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
  getSavedProfile(): FaceIdProfile | null {
    if (typeof window === 'undefined') return null;
    
    try {
      const profileData = localStorage.getItem('faceIdProfile');
      return profileData ? JSON.parse(profileData) : null;
    } catch {
      return null;
    }
  },

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  saveProfile(profile: FaceIdProfile): void {
    if (typeof window === 'undefined') return;
    
    try {
      localStorage.setItem('faceIdProfile', JSON.stringify(profile));
      localStorage.setItem('faceIdEnabled', 'true');
      console.log('‚úÖ Face ID –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', profile.id);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Face ID –ø—Ä–æ—Ñ–∏–ª—è:', error);
    }
  },

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  removeProfile(): void {
    if (typeof window === 'undefined') return;
    
    try {
      localStorage.removeItem('faceIdProfile');
      localStorage.removeItem('faceIdEnabled');
      localStorage.removeItem('faceIdProfileId');
      console.log('üóëÔ∏è Face ID –ø—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è Face ID –ø—Ä–æ—Ñ–∏–ª—è:', error);
    }
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
  getStatus(): { enabled: boolean; profile: FaceIdProfile | null } {
    const profile = this.getSavedProfile();
    return {
      enabled: !!profile,
      profile
    };
  },

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  updateLastUsed(profileId: string): void {
    const profile = this.getSavedProfile();
    if (profile && profile.id === profileId) {
      profile.lastUsed = new Date().toISOString();
      this.saveProfile(profile);
    }
  }
};
