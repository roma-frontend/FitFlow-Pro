// components/admin/dashboard/SecurityWidget.tsx - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
"use client";

import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { 
  Shield, 
  Camera, 
  Lock, 
  CheckCircle, 
  AlertTriangle,
  Settings,
  Users,
  Eye
} from "lucide-react";
import { FaceIdSetup } from "@/components/face-id/FaceIdSetup";
import { faceIdUtils } from "@/utils/faceIdUtils"; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —É—Ç–∏–ª–∏—Ç—ã
import { toast } from "@/hooks/use-toast";
import { useRouter } from "next/navigation";

export function SecurityWidget() {
  const [showFaceIdSetup, setShowFaceIdSetup] = useState(false);
  const [faceIdStatus, setFaceIdStatus] = useState(() => faceIdUtils.getStatus());
  const router = useRouter()

  useEffect(() => {
    const status = faceIdUtils.getStatus();
    setFaceIdStatus(status);
  }, []);

  if (showFaceIdSetup) {
    return (
      <Card className="w-full">
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <div className="flex items-center">
              <Camera className="h-5 w-5 mr-2 text-blue-600" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Face ID
            </div>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setShowFaceIdSetup(false)}
            >
              ‚úï
            </Button>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <FaceIdSetup 
            onComplete={(success: boolean, data?: any) => {
              if (success && data) {
                const profile = {
                  id: data.profileId || `face_${Date.now()}`,
                  userId: 'current_user',
                  created: new Date().toISOString(),
                  lastUsed: new Date().toISOString()
                };

                faceIdUtils.saveProfile(profile);
                setFaceIdStatus(faceIdUtils.getStatus());
                setShowFaceIdSetup(false);
                
                toast({
                  title: "Face ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Security! üéâ",
                  description: `–ü—Ä–æ—Ñ–∏–ª—å: ${profile.id.slice(0, 8)}...`,
                });
              }
            }} 
          />
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle className="flex items-center">
          <Shield className="h-5 w-5 mr-2 text-green-600" />
          –¶–µ–Ω—Ç—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        
        {/* ‚úÖ Face ID —Å—Ç–∞—Ç—É—Å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ */}
        <div className="flex items-center justify-between p-3 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200">
          <div className="flex items-center">
            <Camera className="h-4 w-4 text-blue-600 mr-2" />
            <div>
              <div className="font-medium text-sm">Face ID</div>
              <div className="text-xs text-gray-600">
                {faceIdStatus.enabled ? `ID: ${faceIdStatus.profile?.id.slice(0, 8)}...` : '–ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥'}
              </div>
            </div>
          </div>
          <div className="flex items-center space-x-2">
            {faceIdStatus.enabled ? (
              <>
                <Badge variant="secondary" className="bg-green-100 text-green-800">
                  <CheckCircle className="h-3 w-3 mr-1" />
                  –ê–∫—Ç–∏–≤–µ–Ω
                </Badge>
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => setShowFaceIdSetup(true)}
                >
                  <Settings className="h-3 w-3 mr-1" />
                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
                </Button>
              </>
            ) : (
              <Button
                size="sm"
                onClick={() => setShowFaceIdSetup(true)}
                className="bg-blue-600 hover:bg-blue-700"
              >
                <Camera className="h-3 w-3 mr-1" />
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
              </Button>
            )}
          </div>
        </div>

        {/* 2FA —Å—Ç–∞—Ç—É—Å */}
        <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
          <div className="flex items-center">
            <Lock className="h-4 w-4 text-gray-600 mr-2" />
            <div>
              <div className="font-medium text-sm">–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</div>
              <div className="text-xs text-gray-600">2FA —á–µ—Ä–µ–∑ SMS/Email</div>
            </div>
          </div>
          <Badge variant="outline" className="text-orange-600 border-orange-300">
            <AlertTriangle className="h-3 w-3 mr-1" />
            –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
          </Badge>
        </div>

        {/* –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ */}
        <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
          <div className="flex items-center">
            <Users className="h-4 w-4 text-gray-600 mr-2" />
            <div>
              <div className="font-medium text-sm">–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏</div>
              <div className="text-xs text-gray-600">–¢–µ–∫—É—â–∏–µ –≤—Ö–æ–¥—ã –≤ —Å–∏—Å—Ç–µ–º—É</div>
            </div>
          </div>
          <Badge variant="secondary" className="bg-green-100 text-green-800">
            <CheckCircle className="h-3 w-3 mr-1" />
            2 –∞–∫—Ç–∏–≤–Ω—ã–µ
          </Badge>
        </div>

        {/* ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
        {faceIdStatus.enabled && faceIdStatus.profile && (
          <div className="p-3 bg-green-50 rounded-lg border border-green-200">
            <div className="flex items-center mb-2">
              <Eye className="h-4 w-4 text-green-600 mr-2" />
              <span className="text-sm font-medium text-green-900">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Face ID</span>
            </div>
            <div className="text-xs text-green-700 space-y-1">
              <div>–°–æ–∑–¥–∞–Ω: {new Date(faceIdStatus.profile.created).toLocaleDateString()}</div>
              {faceIdStatus.profile.lastUsed && (
                <div>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {new Date(faceIdStatus.profile.lastUsed).toLocaleDateString()}</div>
              )}
            </div>
          </div>
        )}

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
        <div className="space-y-2">
          <Button 
            variant="outline" 
            size="sm" 
            className="w-full"
            onClick={() => router.push('/admin/security')}
          >
            <Settings className="h-3 w-3 mr-1" />
            –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          </Button>
          
          {/* ‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ Face ID */}
          {faceIdStatus.enabled && (
            <Button 
              variant="ghost" 
              size="sm" 
              className="w-full text-red-600 hover:text-red-700 hover:bg-red-50"
              onClick={() => {
                faceIdUtils.removeProfile();
                setFaceIdStatus(faceIdUtils.getStatus());
                toast({
                  title: "Face ID –æ—Ç–∫–ª—é—á–µ–Ω",
                  description: "–ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω",
                });
              }}
            >
              <Camera className="h-3 w-3 mr-1" />
              –û—Ç–∫–ª—é—á–∏—Ç—å Face ID
            </Button>
          )}
        </div>
      </CardContent>
    </Card>
  );
}
