// components/ui/avatar-upload.tsx - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"use client";

import { useState, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Upload, X, Loader2 } from 'lucide-react';
import { useCloudinaryUpload } from '@/hooks/useCloudinaryUpload';
import { useToast } from '@/hooks/use-toast';

interface AvatarUploadProps {
  currentUrl?: string | null;
  onUploadComplete: (url: string) => void;
  onRemove?: () => void;
  userName: string;
  disabled?: boolean;
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ URL
const isValidUrl = (url: string | null | undefined): boolean => {
  if (!url || url.trim() === '') {
    return true; // –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ
  }

  const trimmedUrl = url.trim();

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ URL
    const urlObj = new URL(trimmedUrl);
    return urlObj.protocol === 'http:' || urlObj.protocol === 'https:';
  } catch {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∏ data URLs
    return trimmedUrl.startsWith('/') || 
           trimmedUrl.startsWith('./') || 
           trimmedUrl.startsWith('../') ||
           trimmedUrl.startsWith('data:image/');
  }
};

export function AvatarUpload({ 
  currentUrl, 
  onUploadComplete, 
  onRemove, 
  userName,
  disabled = false 
}: AvatarUploadProps) {
  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
  const [previewUrl, setPreviewUrl] = useState<string | null>(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    return (currentUrl && isValidUrl(currentUrl)) ? currentUrl : null;
  });
  
  const fileInputRef = useRef<HTMLInputElement>(null);
  const { upload, isUploading, error } = useCloudinaryUpload();
  const { toast } = useToast();

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    // ‚úÖ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
    event.stopPropagation();
    
    const file = event.target.files?.[0];
    if (!file) return;

    console.log('üìÅ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:', {
      name: file.name,
      size: file.size,
      type: file.type
    });

    // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–ê –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('image/')) {
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞",
        description: "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
      });
      return;
    }

    if (file.size > 10 * 1024 * 1024) { // 10MB
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞",
        description: "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10MB"
      });
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é
    const reader = new FileReader();
    reader.onload = (e) => {
      const result = e.target?.result as string;
      if (result && isValidUrl(result)) {
        setPreviewUrl(result);
      }
    };
    reader.readAsDataURL(file);

    try {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
      const uploadedUrl = await upload(file, {
        folder: 'user-avatars',
        uploadPreset: 'FitFlow-Pro'
      });

      if (uploadedUrl && isValidUrl(uploadedUrl)) {
        console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', uploadedUrl);
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ
        if (currentUrl && currentUrl !== uploadedUrl && isValidUrl(currentUrl)) {
          try {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            console.log('üóëÔ∏è –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', currentUrl);
          } catch (deleteError) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', deleteError);
          }
        }
        
        onUploadComplete(uploadedUrl);
        toast({
          title: "–£—Å–ø–µ—Ö!",
          description: "–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        });
      } else {
        throw new Error('–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL');
      }
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setPreviewUrl((currentUrl && isValidUrl(currentUrl)) ? currentUrl : null);
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
        description: error.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ"
      });
    }

    // –û—á–∏—â–∞–µ–º input
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };

  // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Å –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤—Å–ø–ª—ã—Ç–∏—è
  const handleUploadClick = (event: React.MouseEvent) => {
    event.preventDefault();
    event.stopPropagation();
    if (!disabled && !isUploading) {
      fileInputRef.current?.click();
    }
  };

  const handleRemove = async (event: React.MouseEvent) => {
    event.preventDefault();
    event.stopPropagation();
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –æ—á–∏—Å—Ç–∫–æ–π
    const urlToDelete = previewUrl;
    
    setPreviewUrl(null);
    
    if (onRemove) {
      onRemove();
    }
    
    // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–ê –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Cloudinary
    if (urlToDelete && urlToDelete.includes('cloudinary.com')) {
      try {
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Cloudinary:', urlToDelete);
        
        const response = await fetch(`/api/upload/delete?url=${encodeURIComponent(urlToDelete)}`, {
          method: 'DELETE'
        });
        
        if (response.ok) {
          const result = await response.json();
          console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ Cloudinary:', result);
        } else {
          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Cloudinary');
        }
      } catch (deleteError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', deleteError);
      }
    }
    
    toast({
      title: "–§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ",
      description: "–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ"
    });
  };

  const getInitials = (name: string) => {
    return name.split(' ').map(n => n[0]).join('').toUpperCase();
  };

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞–ª–∏–¥–Ω—ã–π URL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const displayUrl = previewUrl && isValidUrl(previewUrl) ? previewUrl : null;

  return (
    <div className="flex flex-col items-center space-y-4" data-file-upload>
      {/* –ê–≤–∞—Ç–∞—Ä */}
      <div className="relative">
        <Avatar className="h-24 w-24 ring-4 ring-white shadow-lg">
          {displayUrl ? (
            <AvatarImage 
              src={displayUrl} 
              alt={userName}
              className="object-cover"
              onError={(e) => {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', displayUrl);
                // –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                (e.target as HTMLImageElement).style.display = 'none';
                setPreviewUrl(null);
              }}
            />
          ) : (
            <AvatarFallback className="bg-gradient-to-br from-blue-500 to-indigo-600 text-white text-xl font-semibold">
              {getInitials(userName)}
            </AvatarFallback>
          )}
        </Avatar>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {isUploading && (
          <div className="absolute inset-0 bg-black/50 rounded-full flex items-center justify-center">
            <Loader2 className="h-6 w-6 text-white animate-spin" />
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
        {displayUrl && !isUploading && onRemove && !disabled && (
          <Button
            type="button"
            variant="destructive"
            size="sm"
            className="absolute -top-2 -right-2 h-6 w-6 rounded-full p-0"
            onClick={handleRemove}
          >
            <X className="h-3 w-3" />
          </Button>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="flex gap-2">
        <Button
          type="button"
          variant="outline"
          size="sm"
          onClick={handleUploadClick}
          disabled={disabled || isUploading}
          className="flex items-center gap-2"
        >
          {isUploading ? (
            <>
              <Loader2 className="h-4 w-4 animate-spin" />
              –ó–∞–≥—Ä—É–∑–∫–∞...
            </>
          ) : (
            <>
              <Upload className="h-4 w-4" />
              {displayUrl ? '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ'}
            </>
          )}
        </Button>
      </div>

      {/* ‚úÖ –°–∫—Ä—ã—Ç—ã–π input —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ */}
      <input
        ref={fileInputRef}
        type="file"
        accept="image/jpeg,image/jpg,image/png,image/webp,image/gif"
        onChange={handleFileSelect}
        onClick={(e) => e.stopPropagation()}
        onFocus={(e) => e.stopPropagation()}
        className="hidden"
        disabled={disabled || isUploading}
        data-file-upload
      />

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å */}
      {error && (
        <p className="text-sm text-red-600 text-center max-w-xs">
          {error}
        </p>
      )}

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <p className="text-xs text-gray-500 text-center">
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF, WebP<br />
        –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB
      </p>
    </div>
  );
}