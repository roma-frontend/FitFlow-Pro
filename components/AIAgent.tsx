"use client"

import React, { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import {
  MessageCircle,
  Send,
  X,
  Sparkles,
  Brain,
  Dumbbell,
  Users,
  CreditCard,
  Calendar,
  ShoppingBag,
  Target,
  Heart,
  Zap,
  Star,
  ChevronRight,
  Loader2,
  Bot,
  User,
  ArrowUp,
  Mic,
  MicOff
} from 'lucide-react';

interface Message {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
  suggestions?: string[];
  links?: Array<{
    title: string;
    url: string;
    description: string;
    icon: any;
  }>;
}

interface QuickAction {
  title: string;
  description: string;
  icon: any;
  action: string;
  color: string;
}

const AIAgent = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputText, setInputText] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [isListening, setIsListening] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  const quickActions: QuickAction[] = [
    {
      title: "–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞",
      description: "–ù–∞–π–¥–µ–º –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π",
      icon: Users,
      action: "find_trainer",
      color: "from-blue-500 to-indigo-600"
    },
    {
      title: "–í—ã–±—Ä–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç",
      description: "–ü–æ–¥–±–µ—Ä–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω",
      icon: CreditCard,
      action: "choose_membership",
      color: "from-green-500 to-emerald-600"
    },
    {
      title: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É",
      description: "–ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä—É",
      icon: Calendar,
      action: "book_training",
      color: "from-purple-500 to-pink-600"
    },
    {
      title: "–ü–æ—Å–µ—Ç–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω",
      description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
      icon: ShoppingBag,
      action: "visit_shop",
      color: "from-orange-500 to-red-600"
    }
  ];

  // –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞
  const knowledgeBase = {
    trainers: {
      "anna-petrova": {
        name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        specialty: "–ô–æ–≥–∞ –∏ —Å—Ç—Ä–µ—Ç—á–∏–Ω–≥",
        price: "–æ—Ç 2000‚ÇΩ/—á–∞—Å",
        rating: 4.9,
        description: "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –π–æ–≥–∏ —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –¥–∏–ø–ª–æ–º–æ–º"
      },
      "mikhail-volkov": {
        name: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤",
        specialty: "–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
        price: "–æ—Ç 2500‚ÇΩ/—á–∞—Å",
        rating: 4.8,
        description: "–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –ø–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥—É"
      },
      "elena-smirnova": {
        name: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        specialty: "–ö–∞—Ä–¥–∏–æ –∏ –ø–æ—Ö—É–¥–µ–Ω–∏–µ",
        price: "–æ—Ç 2200‚ÇΩ/—á–∞—Å",
        rating: 5.0,
        description: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏—é –∏ –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º"
      },
      "dmitriy-kozlov": {
        name: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤",
        specialty: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥",
        price: "–æ—Ç 2300‚ÇΩ/—á–∞—Å",
        rating: 4.7,
        description: "–≠–∫—Å–ø–µ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–∏–Ω–≥–∞ –∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏"
      },
      "olga-ivanova": {
        name: "–û–ª—å–≥–∞ –ò–≤–∞–Ω–æ–≤–∞",
        specialty: "–ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        price: "–æ—Ç 1800‚ÇΩ/—á–∞—Å",
        rating: 4.9,
        description: "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º"
      },
      "aleksandr-petrov": {
        name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤",
        specialty: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥",
        price: "–æ—Ç 5000‚ÇΩ/—á–∞—Å",
        rating: 5.0,
        description: "–≠–ª–∏—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º"
      }
    },
    programs: {
      yoga: { name: "–ô–æ–≥–∞ –∏ —Ä–µ–ª–∞–∫—Å", price: "–æ—Ç 800‚ÇΩ", description: "–ì–∞—Ä–º–æ–Ω–∏—è —Ç–µ–ª–∞ –∏ –¥—É—Ö–∞" },
      strength: { name: "–°–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏–Ω–≥", price: "–æ—Ç 1000‚ÇΩ", description: "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã" },
      cardio: { name: "–ö–∞—Ä–¥–∏–æ –∏ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏–µ", price: "–æ—Ç 700‚ÇΩ", description: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –ø–æ—Ö—É–¥–µ–Ω–∏–µ" },
      functional: { name: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥", price: "–æ—Ç 900‚ÇΩ", description: "–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –∏ —Å–∏–ª—ã" }
    },
    memberships: [
      { name: "–ë–∞–∑–æ–≤—ã–π", price: 2990, description: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö" },
      { name: "–ü—Ä–µ–º–∏—É–º", price: 4990, description: "–î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤", popular: true },
      { name: "VIP", price: 7990, description: "–ú–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π" },
      { name: "–ë–µ–∑–ª–∏–º–∏—Ç", price: 39900, description: "–ì–æ–¥–æ–≤–æ–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç", discount: 25 }
    ]
  };

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–æ–Ω—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  useEffect(() => {
    if (isOpen && messages.length === 0) {
      setTimeout(() => {
        const welcomeMessage: Message = {
          id: Date.now().toString(),
          text: "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–ø–æ–º–æ—â–Ω–∏–∫ FitFlow Pro! –ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞, –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–µ–º –∫–ª—É–±–µ. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
          isBot: true,
          timestamp: new Date(),
          suggestions: [
            "–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞",
            "–í—ã–±—Ä–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç",
            "–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
            "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ"
          ]
        };
        setMessages([welcomeMessage]);
      }, 500);
    }
  }, [isOpen]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const processUserMessage = async (text: string) => {
    const userMessage: Message = {
      id: Date.now().toString(),
      text,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setIsTyping(true);

    // –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await new Promise(resolve => setTimeout(resolve, 1500));

    const botResponse = generateBotResponse(text.toLowerCase());
    setMessages(prev => [...prev, botResponse]);
    setIsTyping(false);
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
  const generateBotResponse = (text: string): Message => {
    let responseText = "";
    let suggestions: string[] = [];
    let links: Array<{ title: string; url: string; description: string; icon: any }> = [];

    // –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    if (text.includes('—Ç—Ä–µ–Ω–µ—Ä') || text.includes('–∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä')) {
      if (text.includes('–π–æ–≥–∞') || text.includes('—Å—Ç—Ä–µ—Ç—á–∏–Ω–≥')) {
        responseText = "üßò‚Äç‚ôÄÔ∏è –î–ª—è –π–æ–≥–∏ –∏ —Å—Ç—Ä–µ—Ç—á–∏–Ω–≥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ê–Ω–Ω—É –ü–µ—Ç—Ä–æ–≤—É! –û–Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –¥–∏–ø–ª–æ–º–æ–º. –¶–µ–Ω–∞ –æ—Ç 2000‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 4.9‚≠ê";
        links.push({
          title: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞ - –ô–æ–≥–∞ –∏ —Å—Ç—Ä–µ—Ç—á–∏–Ω–≥",
          url: "/trainers/anna-petrova",
          description: "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –π–æ–≥–∏",
          icon: Heart
        });
      } else if (text.includes('—Å–∏–ª–æ–≤') || text.includes('–º–∞—Å—Å') || text.includes('–∫–∞—á–∞—Ç—å')) {
        responseText = "üí™ –î–ª—è —Å–∏–ª–æ–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤! –ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –ø–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥—É —Å 8+ –ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –¶–µ–Ω–∞ –æ—Ç 2500‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 4.8‚≠ê";
        links.push({
          title: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤ - –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
          url: "/trainers/mikhail-volkov",
          description: "–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –ø–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥—É",
          icon: Dumbbell
        });
      } else if (text.includes('–ø–æ—Ö—É–¥') || text.includes('–∫–∞—Ä–¥–∏–æ') || text.includes('–∂–∏—Ä')) {
        responseText = "üî• –î–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏ –∫–∞—Ä–¥–∏–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ï–ª–µ–Ω—É –°–º–∏—Ä–Ω–æ–≤—É! –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏—é —Å –Ω–∞—É—á–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º. –¶–µ–Ω–∞ –æ—Ç 2200‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 5.0‚≠ê";
        links.push({
          title: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞ - –ö–∞—Ä–¥–∏–æ –∏ –ø–æ—Ö—É–¥–µ–Ω–∏–µ",
          url: "/trainers/elena-smirnova",
          description: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏—é",
          icon: Zap
        });
      } else if (text.includes('—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å') || text.includes('trx') || text.includes('—Ä–µ–∞–±–∏–ª–∏—Ç')) {
        responseText = "üéØ –î–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–∏–Ω–≥–∞ —Å–æ–≤–µ—Ç—É—é –î–º–∏—Ç—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞! –≠–∫—Å–ø–µ—Ä—Ç –ø–æ TRX –∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏. –¶–µ–Ω–∞ –æ—Ç 2300‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 4.7‚≠ê";
        links.push({
          title: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤ - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥",
          url: "/trainers/dmitriy-kozlov",
          description: "–≠–∫—Å–ø–µ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–∏–Ω–≥–∞",
          icon: Target
        });
      } else if (text.includes('–≥—Ä—É–ø–ø') || text.includes('–∞—ç—Ä–æ–±') || text.includes('–∑—É–º–±–∞')) {
        responseText = "üíÉ –î–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –û–ª—å–≥–∞ –ò–≤–∞–Ω–æ–≤–∞! –≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Ö–∞—Ä–∏–∑–º–æ–π. –¶–µ–Ω–∞ –æ—Ç 1800‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 4.9‚≠ê";
        links.push({
          title: "–û–ª—å–≥–∞ –ò–≤–∞–Ω–æ–≤–∞ - –ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
          url: "/trainers/olga-ivanova",
          description: "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
          icon: Users
        });
      } else if (text.includes('vip') || text.includes('—ç–ª–∏—Ç–Ω') || text.includes('–ø—Ä–µ–º–∏—É–º')) {
        responseText = "üëë –î–ª—è VIP-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∞! –≠–ª–∏—Ç–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å 10+ –ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ –∑–≤–µ–∑–¥–∞–º–∏. –¶–µ–Ω–∞ –æ—Ç 5000‚ÇΩ/—á–∞—Å, —Ä–µ–π—Ç–∏–Ω–≥ 5.0‚≠ê";
        links.push({
          title: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤ - VIP —Ç—Ä–µ–Ω–∏–Ω–≥",
          url: "/trainers/aleksandr-petrov",
          description: "–≠–ª–∏—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä",
          icon: Star
        });
      } else {
        responseText = "üë• –£ –Ω–∞—Å 6 –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π! –ú–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å?";
        links.push({
          title: "–í—Å–µ —Ç—Ä–µ–Ω–µ—Ä—ã FitFlow Pro",
          url: "/trainers",
          description: "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞",
          icon: Users
        });
        suggestions = ["–ü–æ—Ö—É–¥–µ—Ç—å", "–ù–∞–±—Ä–∞—Ç—å –º–∞—Å—Å—É", "–£–ª—É—á—à–∏—Ç—å –≥–∏–±–∫–æ—Å—Ç—å", "–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è"];
      }
    } else if (text.includes('–∞–±–æ–Ω–µ–º–µ–Ω—Ç') || text.includes('—á–ª–µ–Ω—Å—Ç–≤–æ') || text.includes('—Ç–∞—Ä–∏—Ñ')) {
      responseText = "üí≥ –û—Ç–ª–∏—á–Ω–æ! –£ –Ω–∞—Å 4 —Ç–∏–ø–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤:\n\nü•â –ë–∞–∑–æ–≤—ã–π (2990‚ÇΩ) - –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö\nü•à –ü—Ä–µ–º–∏—É–º (4990‚ÇΩ) - —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π\nü•á VIP (7990‚ÇΩ) - –º–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n‚ôæÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç (39900‚ÇΩ/–≥–æ–¥) - —Å–∫–∏–¥–∫–∞ 25%";
      links.push({
        title: "–í—ã–±—Ä–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç",
        url: "/memberships",
        description: "–ü–æ–¥–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω",
        icon: CreditCard
      });
      suggestions = ["–ë–∞–∑–æ–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç", "–ü—Ä–µ–º–∏—É–º –∞–±–æ–Ω–µ–º–µ–Ω—Ç", "VIP –∞–±–æ–Ω–µ–º–µ–Ω—Ç", "–ì–æ–¥–æ–≤–æ–π –±–µ–∑–ª–∏–º–∏—Ç"];
    } else if (text.includes('–ø—Ä–æ–≥—Ä–∞–º') || text.includes('–∑–∞–Ω—è—Ç') || text.includes('—Ç—Ä–µ–Ω–∏—Ä–æ–≤')) {
      responseText = "üèÉ‚Äç‚ôÇÔ∏è –£ –Ω–∞—Å –µ—Å—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:\n\nüßò‚Äç‚ôÄÔ∏è –ô–æ–≥–∞ –∏ —Ä–µ–ª–∞–∫—Å (–æ—Ç 800‚ÇΩ)\nüí™ –°–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏–Ω–≥ (–æ—Ç 1000‚ÇΩ)\nüî• –ö–∞—Ä–¥–∏–æ –∏ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏–µ (–æ—Ç 700‚ÇΩ)\nüéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ (–æ—Ç 900‚ÇΩ)";
      links.push({
        title: "–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
        url: "/programs",
        description: "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É",
        icon: Target
      });
      suggestions = ["–ô–æ–≥–∞", "–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", "–ö–∞—Ä–¥–∏–æ", "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥"];
    } else if (text.includes('–∑–∞–ø–∏—Å') || text.includes('–±—Ä–æ–Ω–∏—Ä')) {
      responseText = "üìÖ –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É:\n\n1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞\n2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è\n3Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!";
      links.push(
        {
          title: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Ç—Ä–µ–Ω–µ—Ä—É",
          url: "/trainers",
          description: "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞ –∏ –∑–∞–ø–∏—à–∏—Ç–µ—Å—å",
          icon: Calendar
        },
        {
          title: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
          url: "/member-dashboard",
          description: "–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø–∏—Å—è–º–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ",
          icon: User
        }
      );
      suggestions = ["–í—ã–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞", "–ú–æ–∏ –∑–∞–ø–∏—Å–∏", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"];
    } else if (text.includes('–º–∞–≥–∞–∑–∏–Ω') || text.includes('–ø–∏—Ç–∞–Ω') || text.includes('–ø—Ä–æ—Ç–µ–∏–Ω') || text.includes('–∫—É–ø–∏—Ç—å')) {
      responseText = "üõí –í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n\nüíä –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\nü•§ –ü—Ä–æ—Ç–µ–∏–Ω—ã –∏ –≥–µ–π–Ω–µ—Ä—ã\nüèÉ‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã\nüëï –û–¥–µ–∂–¥–∞ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å–∞\n\n–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏!";
      links.push({
        title: "–§–∏—Ç–Ω–µ—Å-–º–∞–≥–∞–∑–∏–Ω",
        url: "/shop",
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
        icon: ShoppingBag
      });
      suggestions = ["–ü—Ä–æ—Ç–µ–∏–Ω—ã", "–í–∏—Ç–∞–º–∏–Ω—ã", "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", "–û–¥–µ–∂–¥–∞"];
    } else if (text.includes('—Ü–µ–Ω–∞') || text.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å') || text.includes('—Å–∫–æ–ª—å–∫–æ')) {
      responseText = "üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã:\n\nüë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä—ã: 1800‚ÇΩ - 5000‚ÇΩ/—á–∞—Å\nüí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã: 2990‚ÇΩ - 39900‚ÇΩ\nüèÉ‚Äç‚ôÇÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã: 700‚ÇΩ - 1000‚ÇΩ\nüéØ –ì—Ä—É–ø–ø–æ–≤—ã–µ: –æ—Ç 800‚ÇΩ\n\n–ü–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - –±–µ—Å–ø–ª–∞—Ç–Ω–æ!";
      suggestions = ["–¶–µ–Ω—ã –Ω–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–≤", "–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤", "–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è"];
    } else if (text.includes('–≤—Ä–µ–º—è') || text.includes('–≥—Ä–∞—Ñ–∏–∫') || text.includes('–∫–æ–≥–¥–∞')) {
      responseText = "üïê –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º:\n\nüåÖ –ü–Ω-–ü—Ç: 06:00 - 24:00\nüåÑ –°–±-–í—Å: 08:00 - 22:00\n\n–¢—Ä–µ–Ω–µ—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Å 07:00 –¥–æ 21:00. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Å–ª—É–≥–∏ 24/7!";
      suggestions = ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–µ—Ä–æ–≤", "–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è", "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"];
    } else if (text.includes('–≥–¥–µ') || text.includes('–∞–¥—Ä–µ—Å') || text.includes('–ª–æ–∫–∞—Ü–∏—è')) {
      responseText = "üìç –ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞!\n\nüè¢ –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –§–∏—Ç–Ω–µ—Å, 15\nüöá –ú–µ—Ç—Ä–æ: –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è (5 –º–∏–Ω –ø–µ—à–∫–æ–º)\nüÖøÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67";
      suggestions = ["–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", "–ü–∞—Ä–∫–æ–≤–∫–∞", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"];
    } else if (text.includes('–ø—Ä–∏–≤–µ—Ç') || text.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤') || text.includes('–¥–æ–±—Ä')) {
      responseText = "üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å –≤ FitFlow Pro! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö, —Ç—Ä–µ–Ω–µ—Ä–∞—Ö, –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞—Ö –∏–ª–∏ –Ω–∞—à–µ–º —Ñ–∏—Ç–Ω–µ—Å-–∫–ª—É–±–µ. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?";
      suggestions = ["–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞", "–í—ã–±—Ä–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç", "–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"];
    } else if (text.includes('—Å–ø–∞—Å–∏–±–æ') || text.includes('–±–ª–∞–≥–æ–¥–∞—Ä')) {
      responseText = "üòä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å. –£–¥–∞—á–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ FitFlow Pro! üí™";
      suggestions = ["–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã", "–í—ã–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞"];
    } else {
      responseText = "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n\nüë®‚Äçüè´ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö\nüí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã –∏ —Ü–µ–Ω—ã\nüèÉ‚Äç‚ôÇÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\nüìÖ –ó–∞–ø–∏—Å—å –Ω–∞ –∑–∞–Ω—è—Ç–∏—è\n\n–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã –∏—â–µ—Ç–µ?";
      suggestions = ["–¢—Ä–µ–Ω–µ—Ä—ã", "–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã", "–ü—Ä–æ–≥—Ä–∞–º–º—ã", "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"];
    }

    return {
      id: Date.now().toString(),
      text: responseText,
      isBot: true,
      timestamp: new Date(),
      suggestions,
      links
    };
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
  const handleQuickAction = (action: string) => {
    let text = "";
    switch (action) {
      case "find_trainer":
        text = "–ü–æ–º–æ–≥–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞";
        break;
      case "choose_membership":
        text = "–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç";
        break;
      case "book_training":
        text = "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É";
        break;
      case "visit_shop":
        text = "–ü–æ–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω";
        break;
    }
    if (text) {
      processUserMessage(text);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
  const handleSuggestion = (suggestion: string) => {
    processUserMessage(suggestion);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const handleSendMessage = () => {
    if (inputText.trim()) {
      processUserMessage(inputText);
      setInputText('');
    }
  };

  // –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ (–∑–∞–≥–ª—É—à–∫–∞)
  const handleVoiceInput = () => {
    setIsListening(!isListening);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Web Speech API
  };

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ */}
      <AnimatePresence>
        {!isOpen && (
          <motion.button
            initial={{ scale: 0, rotate: -180 }}
            animate={{ scale: 1, rotate: 0 }}
            exit={{ scale: 0, rotate: 180 }}
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
            onClick={() => setIsOpen(true)}
            className="fixed bottom-6 right-6 z-50 w-16 h-16 bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 rounded-full shadow-2xl flex items-center justify-center text-white hover:shadow-3xl transition-all duration-300"
            style={{
              boxShadow: '0 8px 32px rgba(59, 130, 246, 0.3), 0 0 0 0 rgba(59, 130, 246, 0.4)',
              animation: 'pulse-glow 2s infinite'
            }}
          >
            <motion.div
              animate={{ rotate: 360 }}
              transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
            >
              <Brain className="h-8 w-8" />
            </motion.div>
            
            {/* –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏—Ü—ã */}
            <div className="absolute inset-0 rounded-full overflow-clip">
              <motion.div
                className="absolute top-1 right-1 w-1 h-1 bg-white rounded-full"
                animate={{
                  scale: [0, 1, 0],
                  opacity: [0, 1, 0]
                }}
                transition={{
                  duration: 2,
                  repeat: Infinity,
                  delay: 0
                }}
              />
              <motion.div
                className="absolute bottom-2 left-2 w-1.5 h-1.5 bg-yellow-300 rounded-full"
                animate={{
                  scale: [0, 1, 0],
                  opacity: [0, 1, 0]
                }}
                transition={{
                  duration: 2,
                  repeat: Infinity,
                  delay: 0.7
                }}
              />
              <motion.div
                className="absolute top-3 left-1 w-1 h-1 bg-pink-300 rounded-full"
                animate={{
                  scale: [0, 1, 0],
                  opacity: [0, 1, 0]
                }}
                transition={{
                  duration: 2,
                  repeat: Infinity,
                  delay: 1.4
                }}
              />
            </div>
          </motion.button>
        )}
      </AnimatePresence>

      {/* –ß–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, scale: 0.8, y: 100 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.8, y: 100 }}
            className="fixed bottom-6 right-6 z-50 w-96 h-[600px] bg-white rounded-2xl shadow-2xl border border-gray-200 overflow-hidden flex flex-col"
            style={{
              boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)'
            }}
          >
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
            <div className="bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 p-4 text-white">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <motion.div
                    animate={{ rotate: 360 }}
                    transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                    className="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center"
                  >
                    <Brain className="h-6 w-6" />
                  </motion.div>
                  <div>
                    <h3 className="font-bold text-lg">FitFlow AI</h3>
                    <p className="text-sm text-white/80">–í–∞—à —Ñ–∏—Ç–Ω–µ—Å-–ø–æ–º–æ—â–Ω–∏–∫</p>
                  </div>
                </div>
                <motion.button
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.9 }}
                  onClick={() => setIsOpen(false)}
                  className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center hover:bg-white/30 transition-colors"
                >
                  <X className="h-5 w-5" />
                </motion.button>
              </div>
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π) */}
            {messages.length <= 1 && (
              <div className="p-4 border-b bg-gray-50">
                <h4 className="text-sm font-medium text-gray-700 mb-3">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h4>
                <div className="grid grid-cols-2 gap-2">
                  {quickActions.map((action, index) => (
                    <motion.button
                      key={action.action}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={() => handleQuickAction(action.action)}
                      className={`p-3 rounded-lg bg-gradient-to-r ${action.color} text-white text-left hover:shadow-lg transition-all`}
                    >
                      <action.icon className="h-5 w-5 mb-1" />
                      <p className="text-xs font-medium">{action.title}</p>
                    </motion.button>
                  ))}
                </div>
              </div>
            )}

            {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
            <div className="flex-1 overflow-y-auto p-4 space-y-4 min-h-0" style={{ height: 'calc(100% - 140px)' }}>
              {messages.map((message, index) => (
                <motion.div
                  key={message.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                  className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
                >
                  <div className={`max-w-[80%] ${message.isBot ? 'order-1' : 'order-2'}`}>
                    {message.isBot && (
                      <div className="flex items-center space-x-2 mb-1">
                        <Bot className="h-4 w-4 text-blue-500" />
                        <span className="text-xs text-gray-500">FitFlow AI</span>
                      </div>
                    )}
                    <div
                      className={`p-3 rounded-2xl ${
                        message.isBot
                          ? 'bg-gray-100 text-gray-800'
                          : 'bg-gradient-to-r from-blue-500 to-purple-500 text-white'
                      }`}
                    >
                      <p className="text-sm whitespace-pre-line">{message.text}</p>
                    </div>
                    
                    {/* –°—Å—ã–ª–∫–∏ */}
                    {message.links && message.links.length > 0 && (
                      <div className="mt-2 space-y-2">
                        {message.links.map((link, linkIndex) => (
                          <motion.a
                            key={linkIndex}
                            href={link.url}
                            initial={{ opacity: 0, x: -20 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: linkIndex * 0.1 }}
                            className="block p-3 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-all group"
                          >
                            <div className="flex items-center space-x-3">
                              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                                <link.icon className="h-4 w-4 text-white" />
                              </div>
                              <div className="flex-1">
                                <p className="font-medium text-sm text-gray-900">{link.title}</p>
                                <p className="text-xs text-gray-500">{link.description}</p>
                              </div>
                              <ChevronRight className="h-4 w-4 text-gray-400 group-hover:text-gray-600" />
                            </div>
                          </motion.a>
                        ))}
                      </div>
                    )}

                    {/* –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è */}
                    {message.suggestions && message.suggestions.length > 0 && (
                      <div className="mt-3 flex flex-wrap gap-2">
                        {message.suggestions.map((suggestion, suggIndex) => (
                          <motion.button
                            key={suggIndex}
                            initial={{ opacity: 0, scale: 0.8 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: suggIndex * 0.1 }}
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}
                            onClick={() => handleSuggestion(suggestion)}
                            className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium hover:bg-blue-200 transition-colors"
                          >
                            {suggestion}
                          </motion.button>
                        ))}
                      </div>
                    )}
                  </div>
                </motion.div>
              ))}

              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è */}
              {isTyping && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="flex justify-start"
                >
                  <div className="flex items-center space-x-2 mb-1">
                    <Bot className="h-4 w-4 text-blue-500" />
                    <span className="text-xs text-gray-500">FitFlow AI –ø–µ—á–∞—Ç–∞–µ—Ç...</span>
                  </div>
                  <div className="bg-gray-100 p-3 rounded-2xl">
                    <div className="flex space-x-1">
                      <motion.div
                        className="w-2 h-2 bg-gray-400 rounded-full"
                        animate={{ scale: [1, 1.2, 1] }}
                        transition={{ duration: 1, repeat: Infinity, delay: 0 }}
                      />
                      <motion.div
                        className="w-2 h-2 bg-gray-400 rounded-full"
                        animate={{ scale: [1, 1.2, 1] }}
                        transition={{ duration: 1, repeat: Infinity, delay: 0.2 }}
                      />
                      <motion.div
                        className="w-2 h-2 bg-gray-400 rounded-full"
                        animate={{ scale: [1, 1.2, 1] }}
                        transition={{ duration: 1, repeat: Infinity, delay: 0.4 }}
                      />
                    </div>
                  </div>
                </motion.div>
              )}
              <div ref={messagesEndRef} />
            </div>

            {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
            <div className="p-4 border-t bg-gray-50 flex-shrink-0">
              <div className="flex items-center space-x-2">
                <div className="flex-1 relative">
                  <input
                    type="text"
                    value={inputText}
                    onChange={(e) => setInputText(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å..."
                    className="w-full p-3 pr-12 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    disabled={isTyping}
                  />
                  <button
                    onClick={handleVoiceInput}
                    className={`absolute right-3 top-1/2 transform -translate-y-1/2 p-1 rounded-full transition-colors ${
                      isListening ? 'text-red-500 bg-red-50' : 'text-gray-400 hover:text-gray-600'
                    }`}
                  >
                    {isListening ? <MicOff className="h-4 w-4" /> : <Mic className="h-4 w-4" />}
                  </button>
                </div>
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={handleSendMessage}
                  disabled={!inputText.trim() || isTyping}
                  className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed hover:shadow-lg transition-all"
                >
                  {isTyping ? (
                    <Loader2 className="h-4 w-4 animate-spin" />
                  ) : (
                    <Send className="h-4 w-4" />
                  )}
                </motion.button>
              </div>
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ */}
              <div className="mt-2 flex items-center justify-center space-x-2 text-xs text-gray-500">
                <motion.div
                  className="w-2 h-2 bg-green-500 rounded-full"
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity }}
                />
                <span>–û–Ω–ª–∞–π–Ω ‚Ä¢ Powered by AI</span>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π */}
      <style jsx global>{`
        @keyframes pulse-glow {
          0%, 100% {
            box-shadow: 0 8px 32px rgba(59, 130, 246, 0.3), 0 0 0 0 rgba(59, 130, 246, 0.4);
          }
          50% {
            box-shadow: 0 8px 32px rgba(59, 130, 246, 0.5), 0 0 0 8px rgba(59, 130, 246, 0.1);
          }
        }
        
        .animate-sparkle-1 {
          animation: sparkle 1.5s ease-in-out infinite;
        }
        
        .animate-sparkle-2 {
          animation: sparkle 1.5s ease-in-out infinite 0.3s;
        }
        
        .animate-sparkle-3 {
          animation: sparkle 1.5s ease-in-out infinite 0.6s;
        }
        
        @keyframes sparkle {
          0%, 100% { 
            opacity: 0; 
            transform: scale(0);
          }
          50% { 
            opacity: 1; 
            transform: scale(1);
          }
        }
      `}</style>
    </>
  );
};

export default AIAgent;