// components/ai-body-analysis/BodyAnalysisModal.tsx
"use client";

import React, { useState, useCallback, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Camera, Upload, Sparkles, X, ArrowRight, 
  Loader2, Check, AlertCircle, Share2, Zap,
  TrendingUp, Clock, Target, Award
} from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { useToast } from '@/hooks/use-toast';
import { useRouter } from 'next/navigation';
import { useAuth } from '@/hooks/useAuth';
import { analyzeBodyImage } from '@/utils/bodyAnalysisAI';
import type { BodyAnalysisResult, PersonalizedPlan } from '@/types/bodyAnalysis';

interface BodyAnalysisModalProps {
  isOpen: boolean;
  onClose: () => void;
  onAnalysisComplete?: (result: BodyAnalysisResult, plan: PersonalizedPlan) => void;
}

export default function BodyAnalysisModal({ isOpen, onClose, onAnalysisComplete }: BodyAnalysisModalProps) {
  const { user } = useAuth();
  const { toast } = useToast();
  const router = useRouter();
  const fileInputRef = useRef<HTMLInputElement>(null);
  
  const [step, setStep] = useState<'upload' | 'analyzing' | 'results' | 'plan'>('upload');
  const [uploadedImage, setUploadedImage] = useState<string | null>(null);
  const [analysisResult, setAnalysisResult] = useState<BodyAnalysisResult | null>(null);
  const [personalizedPlan, setPersonalizedPlan] = useState<PersonalizedPlan | null>(null);
  const [progress, setProgress] = useState(0);
  const [isSharing, setIsSharing] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageUpload = useCallback(async (file: File) => {
    if (!file.type.startsWith('image/')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        variant: "destructive"
      });
      return;
    }

    // –°–æ–∑–¥–∞–µ–º preview
    const reader = new FileReader();
    reader.onload = (e) => {
      setUploadedImage(e.target?.result as string);
      startAnalysis(file);
    };
    reader.readAsDataURL(file);
  }, [toast]);

  // –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
  const startAnalysis = async (file: File) => {
    setStep('analyzing');
    setProgress(0);

    try {
      // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      const progressInterval = setInterval(() => {
        setProgress(prev => Math.min(prev + 10, 90));
      }, 500);

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const result = await analyzeBodyImage(file, user?.id || 'guest');
      
      clearInterval(progressInterval);
      setProgress(100);
      
      setAnalysisResult(result);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω
      const plan = await generatePersonalizedPlan(result);
      setPersonalizedPlan(plan);
      
      setTimeout(() => {
        setStep('results');
      }, 500);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        variant: "destructive"
      });
      setStep('upload');
    }
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
  const generatePersonalizedPlan = async (analysis: BodyAnalysisResult): Promise<PersonalizedPlan> => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mock –¥–∞–Ω–Ω—ã–µ
    return {
      analysisId: analysis.id,
      recommendedTrainer: {
        id: 'trainer-1',
        name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        specialty: '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ–ª–∞',
        matchScore: 95,
        reason: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞—Ö —Å –≤–∞—à–∏–º —Ç–∏–ø–æ–º —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è'
      },
      trainingProgram: {
        id: 'program-1',
        name: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è 12 –Ω–µ–¥–µ–ª—å',
        duration: 12,
        sessionsPerWeek: 4,
        focusAreas: ['–°–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞', '–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º—ã—à—Ü'],
        exercises: []
      },
      nutritionPlan: {
        dailyCalories: 2000,
        macros: {
          protein: 150,
          carbs: 200,
          fats: 70
        }
      },
      recommendedProducts: [
        {
          productId: 'prod-1',
          name: '–ü—Ä–æ—Ç–µ–∏–Ω Whey Gold Standard',
          purpose: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Ä–æ—Å—Ç –º—ã—à—Ü',
          timing: '–ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          monthlyBudget: 3500,
          importance: 'essential'
        },
        {
          productId: 'prod-2',
          name: 'BCAA Energy',
          purpose: '–≠–Ω–µ—Ä–≥–∏—è –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          timing: '–í–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          monthlyBudget: 2000,
          importance: 'recommended'
        }
      ],
      membershipRecommendation: {
        type: 'Premium',
        reason: '–í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –≤–∞—à–µ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏',
        features: ['–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∞', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å'],
        price: 4990,
        savings: 1500
      },
      projectedResults: {
        week4: '-3-4 –∫–≥, —É–ª—É—á—à–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏',
        week8: '-6-8 –∫–≥, –≤–∏–¥–∏–º–æ–µ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º—ã—à—Ü',
        week12: '-10-12 –∫–≥, –ø–æ–ª–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ–ª–∞',
        successProbability: 87
      }
    };
  };

  // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
  const handleShare = async () => {
    setIsSharing(true);
    
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
      const shareData = {
        title: '–ú–æ—è —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å FitFlow Pro!',
        text: `–ù–∞—á–∏–Ω–∞—é —Å–≤–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ! AI –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç -${analysisResult?.recommendations.estimatedTimeToGoal} –∫–≥ –∑–∞ 12 –Ω–µ–¥–µ–ª—å! üí™`,
        url: `${window.location.origin}/transformation/${analysisResult?.id}`
      };

      if (navigator.share) {
        await navigator.share(shareData);
      } else {
        // Fallback - –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä
        await navigator.clipboard.writeText(shareData.url);
        toast({
          title: "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!",
          description: "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ–π –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö"
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —à–∞—Ä–∏–Ω–≥–∞:', error);
    } finally {
      setIsSharing(false);
    }
  };

  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω
  const handleApplyPlan = () => {
    if (onAnalysisComplete && analysisResult && personalizedPlan) {
      onAnalysisComplete(analysisResult, personalizedPlan);
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø–æ–¥–ø–∏—Å–∫–∏
    router.push(`/transformation/checkout?analysisId=${analysisResult?.id}`);
  };

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 z-50 bg-black/80 backdrop-blur-sm flex items-center justify-center p-4"
          onClick={(e) => e.target === e.currentTarget && onClose()}
        >
          <motion.div
            initial={{ scale: 0.9, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            exit={{ scale: 0.9, opacity: 0 }}
            className="bg-white rounded-3xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
          >
            {/* Header */}
            <div className="sticky top-0 bg-white z-10 p-6 border-b">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center">
                    <Sparkles className="h-6 w-6 text-white" />
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-900">AI –ê–Ω–∞–ª–∏–∑ —Ç–µ–ª–∞</h2>
                    <p className="text-gray-600">–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏</p>
                  </div>
                </div>
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={onClose}
                  className="rounded-full"
                >
                  <X className="h-5 w-5" />
                </Button>
              </div>
            </div>

            {/* Content */}
            <div className="p-6">
              {/* Upload Step */}
              {step === 'upload' && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="text-center py-12"
                >
                  <div className="mb-8">
                    <div className="w-32 h-32 bg-gradient-to-r from-purple-100 to-pink-100 rounded-full flex items-center justify-center mx-auto mb-6">
                      <Camera className="h-16 w-16 text-purple-600" />
                    </div>
                    <h3 className="text-2xl font-bold mb-3">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç</h3>
                    <p className="text-gray-600 max-w-md mx-auto mb-6">
                      AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
                    </p>
                  </div>

                  <div className="flex flex-col sm:flex-row gap-4 justify-center">
                    <input
                      ref={fileInputRef}
                      type="file"
                      accept="image/*"
                      className="hidden"
                      onChange={(e) => {
                        const file = e.target.files?.[0];
                        if (file) handleImageUpload(file);
                      }}
                    />
                    
                    <Button
                      size="lg"
                      onClick={() => fileInputRef.current?.click()}
                      className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
                    >
                      <Upload className="h-5 w-5 mr-2" />
                      –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ
                    </Button>
                    
                    <Button
                      size="lg"
                      variant="outline"
                      onClick={() => {
                        // –û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
                        if (fileInputRef.current) {
                          fileInputRef.current.capture = 'environment';
                          fileInputRef.current.click();
                        }
                      }}
                    >
                      <Camera className="h-5 w-5 mr-2" />
                      –°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ
                    </Button>
                  </div>

                  <div className="mt-8 p-4 bg-blue-50 rounded-2xl max-w-md mx-auto">
                    <h4 className="font-medium text-blue-900 mb-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:</h4>
                    <ul className="text-sm text-blue-700 space-y-1 text-left">
                      <li>‚Ä¢ –§–æ—Ç–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç –Ω–∞ —Å–≤–µ—Ç–ª–æ–º —Ñ–æ–Ω–µ</li>
                      <li>‚Ä¢ –û–±–ª–µ–≥–∞—é—â–∞—è –æ–¥–µ–∂–¥–∞ –∏–ª–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ–æ—Ä–º–∞</li>
                      <li>‚Ä¢ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ</li>
                      <li>‚Ä¢ –ü—Ä—è–º–∞—è –ø–æ–∑–∞, —Ä—É–∫–∏ –≤–¥–æ–ª—å —Ç–µ–ª–∞</li>
                    </ul>
                  </div>
                </motion.div>
              )}

              {/* Analyzing Step */}
              {step === 'analyzing' && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  className="py-12 text-center"
                >
                  <div className="max-w-md mx-auto">
                    {uploadedImage && (
                      <div className="mb-8 relative">
                        <img
                          src={uploadedImage}
                          alt="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–µ —Ñ–æ—Ç–æ"
                          className="w-48 h-64 object-cover rounded-2xl mx-auto shadow-lg"
                        />
                        <div className="absolute inset-0 bg-gradient-to-t from-purple-600/50 to-transparent rounded-2xl" />
                      </div>
                    )}
                    
                    <div className="mb-8">
                      <Loader2 className="h-12 w-12 animate-spin text-purple-600 mx-auto mb-4" />
                      <h3 className="text-xl font-bold mb-2">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–µ —Ñ–æ—Ç–æ...</h3>
                      <p className="text-gray-600 mb-6">AI –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–ª–∞–Ω</p>
                      
                      <Progress value={progress} className="h-2 mb-4" />
                      
                      <div className="space-y-2 text-sm">
                        <motion.div
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: progress > 20 ? 1 : 0, x: 0 }}
                          className="flex items-center gap-2 text-gray-600"
                        >
                          <Check className="h-4 w-4 text-green-500" />
                          –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è
                        </motion.div>
                        <motion.div
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: progress > 40 ? 1 : 0, x: 0 }}
                          className="flex items-center gap-2 text-gray-600"
                        >
                          <Check className="h-4 w-4 text-green-500" />
                          –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–æ–Ω
                        </motion.div>
                        <motion.div
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: progress > 60 ? 1 : 0, x: 0 }}
                          className="flex items-center gap-2 text-gray-600"
                        >
                          <Check className="h-4 w-4 text-green-500" />
                          –†–∞—Å—á–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
                        </motion.div>
                        <motion.div
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: progress > 80 ? 1 : 0, x: 0 }}
                          className="flex items-center gap-2 text-gray-600"
                        >
                          <Check className="h-4 w-4 text-green-500" />
                          –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
                        </motion.div>
                      </div>
                    </div>
                  </div>
                </motion.div>
              )}

              {/* Results Step */}
              {step === 'results' && analysisResult && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                >
                  <div className="grid md:grid-cols-2 gap-8 mb-8">
                    {/* –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
                    <div>
                      <h3 className="text-xl font-bold mb-4">–í–∞—à –∞–Ω–∞–ª–∏–∑</h3>
                      <div className="space-y-4">
                        <Card>
                          <CardContent className="p-6">
                            <div className="flex items-center justify-between mb-4">
                              <span className="text-gray-600">–¢–∏–ø —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è</span>
                              <Badge variant="outline" className="capitalize">
                                {analysisResult.bodyType}
                              </Badge>
                            </div>
                            
                            <div className="space-y-3">
                              <div>
                                <div className="flex justify-between text-sm mb-1">
                                  <span>–ú—ã—à–µ—á–Ω–∞—è –º–∞—Å—Å–∞</span>
                                  <span>{analysisResult.estimatedMuscleMass}%</span>
                                </div>
                                <Progress value={analysisResult.estimatedMuscleMass} className="h-2" />
                              </div>
                              
                              <div>
                                <div className="flex justify-between text-sm mb-1">
                                  <span>–ü—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞</span>
                                  <span>{analysisResult.estimatedBodyFat}%</span>
                                </div>
                                <Progress value={analysisResult.estimatedBodyFat} className="h-2" />
                              </div>
                              
                              <div>
                                <div className="flex justify-between text-sm mb-1">
                                  <span>–§–∏—Ç–Ω–µ—Å-—É—Ä–æ–≤–µ–Ω—å</span>
                                  <span>{analysisResult.fitnessScore}/100</span>
                                </div>
                                <Progress value={analysisResult.fitnessScore} className="h-2" />
                              </div>
                            </div>
                          </CardContent>
                        </Card>

                        {/* –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–æ–Ω—ã */}
                        <Card>
                          <CardContent className="p-6">
                            <h4 className="font-medium mb-3">–ó–æ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã</h4>
                            <div className="space-y-2">
                              {analysisResult.problemAreas.map((area, index) => (
                                <div key={index} className="flex items-center justify-between">
                                  <span className="text-sm">{area.area}</span>
                                  <Badge
                                    variant={
                                      area.severity === 'high' ? 'destructive' :
                                      area.severity === 'medium' ? 'secondary' :
                                      'outline'
                                    }
                                  >
                                    {area.severity === 'high' ? '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' :
                                     area.severity === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' :
                                     '–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'}
                                  </Badge>
                                </div>
                              ))}
                            </div>
                          </CardContent>
                        </Card>
                      </div>
                    </div>

                    {/* –ü—Ä–æ–≥–Ω–æ–∑ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
                    <div>
                      <h3 className="text-xl font-bold mb-4">–í–∞—à–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                      <Card className="overflow-hidden">
                        <div className="bg-gradient-to-r from-purple-500 to-pink-500 p-6 text-white">
                          <div className="flex items-center gap-3 mb-4">
                            <TrendingUp className="h-8 w-8" />
                            <div>
                              <h4 className="text-2xl font-bold">
                                –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: {analysisResult.progressPotential}%
                              </h4>
                              <p className="text-purple-100">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ –ø—Ä–∏ —Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –ø–ª–∞–Ω—É</p>
                            </div>
                          </div>
                        </div>
                        
                        <CardContent className="p-6">
                          <div className="space-y-4">
                            <div className="flex items-center gap-3 p-4 bg-purple-50 rounded-xl">
                              <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                                <span className="text-lg font-bold text-purple-600">4</span>
                              </div>
                              <div>
                                <p className="font-medium">–ß–µ—Ä–µ–∑ 4 –Ω–µ–¥–µ–ª–∏</p>
                                <p className="text-sm text-gray-600">
                                  -{analysisResult.futureProjections.weeks4.estimatedWeight} –∫–≥, 
                                  —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
                                </p>
                              </div>
                            </div>
                            
                            <div className="flex items-center gap-3 p-4 bg-purple-50 rounded-xl">
                              <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                                <span className="text-lg font-bold text-purple-600">8</span>
                              </div>
                              <div>
                                <p className="font-medium">–ß–µ—Ä–µ–∑ 8 –Ω–µ–¥–µ–ª—å</p>
                                <p className="text-sm text-gray-600">
                                  -{analysisResult.futureProjections.weeks8.estimatedWeight} –∫–≥, 
                                  –≤–∏–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                                </p>
                              </div>
                            </div>
                            
                            <div className="flex items-center gap-3 p-4 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl border-2 border-purple-200">
                              <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                                <span className="text-lg font-bold text-white">12</span>
                              </div>
                              <div>
                                <p className="font-medium">–ß–µ—Ä–µ–∑ 12 –Ω–µ–¥–µ–ª—å</p>
                                <p className="text-sm text-gray-600">
                                  -{analysisResult.futureProjections.weeks12.estimatedWeight} –∫–≥, 
                                  –ø–æ–ª–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è!
                                </p>
                              </div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </div>
                  </div>

                  <div className="flex gap-4">
                    <Button
                      size="lg"
                      className="flex-1 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
                      onClick={() => setStep('plan')}
                    >
                      –°–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
                      <ArrowRight className="h-5 w-5 ml-2" />
                    </Button>
                    
                    <Button
                      size="lg"
                      variant="outline"
                      onClick={handleShare}
                      disabled={isSharing}
                    >
                      {isSharing ? (
                        <Loader2 className="h-5 w-5 animate-spin" />
                      ) : (
                        <Share2 className="h-5 w-5" />
                      )}
                    </Button>
                  </div>
                </motion.div>
              )}

              {/* Plan Step */}
              {step === 'plan' && personalizedPlan && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                >
                  <div className="text-center mb-8">
                    <Badge className="mb-3 bg-gradient-to-r from-purple-500 to-pink-500">
                      –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –≥–æ—Ç–æ–≤!
                    </Badge>
                    <h3 className="text-2xl font-bold mb-2">–í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏</h3>
                    <p className="text-gray-600">–í—Å–µ –ø–æ–¥–æ–±—Ä–∞–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</p>
                  </div>

                  {/* –¢—Ä–µ–Ω–µ—Ä */}
                  <Card className="mb-6 overflow-hidden">
                    <div className="bg-gradient-to-r from-blue-500 to-indigo-500 p-1">
                      <CardContent className="bg-white m-[1px] rounded p-6">
                        <div className="flex items-center gap-6">
                          <div className="w-20 h-20 bg-gradient-to-r from-blue-100 to-indigo-100 rounded-2xl flex items-center justify-center">
                            <Award className="h-10 w-10 text-blue-600" />
                          </div>
                          <div className="flex-1">
                            <Badge className="mb-2">
                              –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ {personalizedPlan.recommendedTrainer.matchScore}%
                            </Badge>
                            <h4 className="text-xl font-bold mb-1">
                              {personalizedPlan.recommendedTrainer.name}
                            </h4>
                            <p className="text-gray-600 text-sm mb-2">
                              {personalizedPlan.recommendedTrainer.specialty}
                            </p>
                            <p className="text-sm text-gray-500">
                              {personalizedPlan.recommendedTrainer.reason}
                            </p>
                          </div>
                          <Button variant="outline">
                            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                          </Button>
                        </div>
                      </CardContent>
                    </div>
                  </Card>

                  {/* –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –ø–∏—Ç–∞–Ω–∏–µ */}
                  <div className="grid md:grid-cols-2 gap-6 mb-6">
                    <Card>
                      <CardContent className="p-6">
                        <div className="flex items-center gap-3 mb-4">
                          <Target className="h-6 w-6 text-purple-600" />
                          <h4 className="text-lg font-bold">–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</h4>
                        </div>
                        <div className="space-y-3">
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ</span>
                            <span className="font-medium">{personalizedPlan.trainingProgram.name}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span>
                            <span className="font-medium">{personalizedPlan.trainingProgram.duration} –Ω–µ–¥–µ–ª—å</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600">–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é</span>
                            <span className="font-medium">{personalizedPlan.trainingProgram.sessionsPerWeek}</span>
                          </div>
                          <div className="pt-3 border-t">
                            <p className="text-sm text-gray-600 mb-2">–§–æ–∫—É—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã:</p>
                            <div className="flex flex-wrap gap-2">
                              {personalizedPlan.trainingProgram.focusAreas.map((area, i) => (
                                <Badge key={i} variant="secondary">{area}</Badge>
                              ))}
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </Card>

                    <Card>
                      <CardContent className="p-6">
                        <div className="flex items-center gap-3 mb-4">
                          <Zap className="h-6 w-6 text-orange-600" />
                          <h4 className="text-lg font-bold">–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è</h4>
                        </div>
                        <div className="space-y-3">
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ö–∞–ª–æ—Ä–∏–∏ –≤ –¥–µ–Ω—å</span>
                            <span className="font-medium">{personalizedPlan.nutritionPlan.dailyCalories} –∫–∫–∞–ª</span>
                          </div>
                          <div className="pt-3 border-t space-y-2">
                            <div className="flex justify-between">
                              <span className="text-gray-600">–ë–µ–ª–∫–∏</span>
                              <span className="font-medium">{personalizedPlan.nutritionPlan.macros.protein}–≥</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–£–≥–ª–µ–≤–æ–¥—ã</span>
                              <span className="font-medium">{personalizedPlan.nutritionPlan.macros.carbs}–≥</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–ñ–∏—Ä—ã</span>
                              <span className="font-medium">{personalizedPlan.nutritionPlan.macros.fats}–≥</span>
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  </div>

                  {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã */}
                  <Card className="mb-6">
                    <CardContent className="p-6">
                      <h4 className="text-lg font-bold mb-4">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</h4>
                      <div className="space-y-3">
                        {personalizedPlan.recommendedProducts.map((product, index) => (
                          <div key={index} className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
                            <div className="flex-1">
                              <div className="flex items-center gap-3">
                                <h5 className="font-medium">{product.name}</h5>
                                <Badge 
                                  variant={
                                    product.importance === 'essential' ? 'default' :
                                    product.importance === 'recommended' ? 'secondary' :
                                    'outline'
                                  }
                                >
                                  {product.importance === 'essential' ? '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' :
                                   product.importance === 'recommended' ? '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è' :
                                   '–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ'}
                                </Badge>
                              </div>
                              <p className="text-sm text-gray-600 mt-1">{product.purpose}</p>
                              <p className="text-xs text-gray-500 mt-1">–ü—Ä–∏–Ω–∏–º–∞—Ç—å: {product.timing}</p>
                            </div>
                            <div className="text-right">
                              <p className="font-bold text-lg">{product.monthlyBudget}‚ÇΩ</p>
                              <p className="text-xs text-gray-500">–≤ –º–µ—Å—è—Ü</p>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      <div className="mt-4 p-4 bg-green-50 rounded-xl">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-sm text-green-800">–û–±—â–∏–π –±—é–¥–∂–µ—Ç –Ω–∞ —Å–ø–æ—Ä—Ç–ø–∏—Ç</p>
                            <p className="text-2xl font-bold text-green-900">
                              {personalizedPlan.recommendedProducts.reduce((sum, p) => sum + p.monthlyBudget, 0)}‚ÇΩ/–º–µ—Å
                            </p>
                          </div>
                          <Button variant="outline" className="text-green-700 border-green-300">
                            –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>

                  {/* –ê–±–æ–Ω–µ–º–µ–Ω—Ç */}
                  <Card className="mb-8 overflow-hidden">
                    <div className="bg-gradient-to-r from-purple-500 to-pink-500 p-6 text-white">
                      <div className="flex items-center justify-between">
                        <div>
                          <h4 className="text-2xl font-bold mb-2">
                            –ê–±–æ–Ω–µ–º–µ–Ω—Ç "{personalizedPlan.membershipRecommendation.type}"
                          </h4>
                          <p className="text-purple-100 mb-4">
                            {personalizedPlan.membershipRecommendation.reason}
                          </p>
                          <div className="flex flex-wrap gap-2 mb-4">
                            {personalizedPlan.membershipRecommendation.features.map((feature, i) => (
                              <Badge key={i} className="bg-white/20 text-white border-white/30">
                                {feature}
                              </Badge>
                            ))}
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="text-3xl font-bold">{personalizedPlan.membershipRecommendation.price}‚ÇΩ</p>
                          <p className="text-purple-100">–≤ –º–µ—Å—è—Ü</p>
                          <Badge className="mt-2 bg-white text-purple-600">
                            –≠–∫–æ–Ω–æ–º–∏—è {personalizedPlan.membershipRecommendation.savings}‚ÇΩ
                          </Badge>
                        </div>
                      </div>
                    </div>
                  </Card>

                  {/* CTA */}
                  <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-3xl p-8 text-center">
                    <h3 className="text-2xl font-bold mb-3">–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é?</h3>
                    <p className="text-gray-600 mb-6">
                      –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: {personalizedPlan.projectedResults.successProbability}%
                    </p>
                    
                    <div className="flex flex-col sm:flex-row gap-4 justify-center">
                      <Button
                        size="lg"
                        className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
                        onClick={handleApplyPlan}
                      >
                        <Zap className="h-5 w-5 mr-2" />
                        –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é
                      </Button>
                      
                      <Button
                        size="lg"
                        variant="outline"
                        onClick={() => setStep('results')}
                      >
                        –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
                      </Button>
                    </div>

                    <p className="text-sm text-gray-500 mt-4">
                      –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ —Å–µ–≥–æ–¥–Ω—è ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∞
                    </p>
                  </div>
                </motion.div>
              )}
            </div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}